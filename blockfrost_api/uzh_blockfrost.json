{
	"info": {
		"_postman_id": "e0061722-fab0-4138-8200-8cc1b14cb600",
		"name": "Blockfrost.io ~ API Documentation",
		"description": "Blockfrost is an API as a service that allows users to interact with the Cardano blockchain and parts of its ecosystem.\n\n## Tokens\n\nAfter signing up on https://blockfrost.io, a `project_id` token is automatically generated for each project.\nHTTP header of your request MUST include this `project_id` in order to authenticate against Blockfrost servers.\n\n## Available networks\n\nAt the moment, you can use the following networks. Please, note that each network has its own `project_id`.\n\n<table>\n  <tbody>\n    <tr>\n      <td>\n          <b>Network</b>\n      </td>\n      <td>\n          <b>Endpoint</b>\n      </td>\n    </tr>\n    <tr>\n        <td>Cardano mainnet</td>\n        <td>\n            <code>https://cardano-mainnet.blockfrost.io/api/v0</code>\n        </td>\n    </tr>\n    <tr>\n        <td>Cardano preprod</td>\n        <td>\n            <code>https://cardano-preprod.blockfrost.io/api/v0</code>\n        </td>\n    </tr>\n    <tr>\n        <td>Cardano preview</td>\n        <td>\n            <code>https://cardano-preview.blockfrost.io/api/v0</code>\n        </td>\n    </tr>\n    <tr>\n        <td>InterPlanetary File System</td>\n        <td>\n            <code>https://ipfs.blockfrost.io/api/v0</code>\n        </td>\n    </tr>\n    <tr>\n        <td>Milkomeda mainnet</td>\n        <td>\n            <code>https://milkomeda-mainnet.blockfrost.io/api/v0</code>\n        </td>\n    </tr>\n    <tr>\n        <td>Milkomeda testnet</td>\n        <td>\n            <code>https://milkomeda-testnet.blockfrost.io/api/v0</code>\n        </td>\n    </tr>\n  </tbody>\n</table>\n\n## Milkomeda\n\n<p>\n  <span>\n    For more information about how to use Milkomeda as well as the list of available endpoints, see the <a href=\"/start-building/milkomeda\">Milkomeda section</a>.\n  </span>\n</p>\n\n## Concepts\n\n* All endpoints return either a JSON object or an array.\n* Data is returned in *ascending* (oldest first, newest last) order, if not stated otherwise.\n  * You might use the `?order=desc` query parameter to reverse this order.\n* By default, we return 100 results at a time. You have to use `?page=2` to list through the results.\n* All time and timestamp related fields (except `server_time`) are in seconds of UNIX time.\n* All amounts are returned in Lovelaces, where 1 ADA = 1 000 000 Lovelaces.\n* Addresses, accounts and pool IDs are in Bech32 format.\n* All values are case sensitive.\n* All hex encoded values are lower case.\n* Examples are not based on real data. Any resemblance to actual events is purely coincidental.\n* We allow to upload files up to 100MB of size to IPFS. This might increase in the future.\n* Only pinned IPFS files are counted towards the IPFS quota.\n* Non-pinned IPFS files are subject to regular garbage collection and will be removed unless pinned.\n* We allow maximum of 100 queued pins per IPFS user.\n\n## Errors\n\n### HTTP Status codes\n\nThe following are HTTP status code your application might receive when reaching Blockfrost endpoints and\nit should handle all of these cases.\n\n* HTTP `400` return code is used when the request is not valid.\n* HTTP `402` return code is used when the projects exceed their daily request limit.\n* HTTP `403` return code is used when the request is not authenticated.\n* HTTP `404` return code is used when the resource doesn't exist.\n* HTTP `418` return code is used when the user has been auto-banned for flooding too much after previously receiving error code `402` or `429`.\n* HTTP `425` return code is used in Cardano networks, when the user has submitted a transaction when the mempool is already full, not accepting new txs straight away.\n* HTTP `425` return code is used in IPFS network, when the user has submitted a pin when the pin queue is already full, not accepting new pins straight away.\n* HTTP `429` return code is used when the user has sent too many requests in a given amount of time and therefore has been rate-limited.\n* HTTP `500` return code is used when our endpoints are having a problem.\n\n### Error codes\n\nAn internal error code number is used for better indication of the error in question. It is passed using the following payload.\n\n```json\n{\n  \"status_code\": 403,\n  \"error\": \"Forbidden\",\n  \"message\": \"Invalid project token.\"\n}\n```\n## Limits\n\nThere are two types of limits we are enforcing:\n\nThe first depends on your plan and is the number of request we allow per day. We defined the day from midnight to midnight of UTC time.\n\nThe second is rate limiting. We limit an end user, distinguished by IP address, to 10 requests per second. On top of that, we allow\neach user to send burst of 500 requests, which cools off at rate of 10 requests per second. In essence, a user is allowed to make another\nwhole burst after (currently) 500/10 = 50 seconds. E.g. if a user attempts to make a call 3 seconds after whole burst, 30 requests will be processed.\nWe believe this should be sufficient for most of the use cases. If it is not and you have a specific use case, please get in touch with us, and\nwe will make sure to take it into account as much as we can.\n\n## SDKs\n\nWe support a number of SDKs that will help you in developing your application on top of Blockfrost.\n\n<table>\n  <tbody>\n    <tr>\n        <td><b>Programming language</b></td>\n        <td><b>SDK</b></td>\n    </tr>\n    <tr>\n        <td>JavaScript</td>\n        <td>\n            <a href=\"https://github.com/blockfrost/blockfrost-js\">blockfrost-js</a>\n        </td>\n    </tr>\n    <tr>\n        <td>Haskell</td>\n        <td>\n            <a href=\"https://github.com/blockfrost/blockfrost-haskell\">blockfrost-haskell</a>\n        </td>\n    </tr>\n    <tr>\n        <td>Python</td>\n        <td>\n            <a href=\"https://github.com/blockfrost/blockfrost-python\">blockfrost-python</a>\n        </td>\n    </tr>\n    <tr>\n        <td>Rust</td>\n        <td>\n            <a href=\"https://github.com/blockfrost/blockfrost-rust\">blockfrost-rust</a>\n        </td>\n    </tr>\n    <tr>\n        <td>Golang</td>\n        <td>\n            <a href=\"https://github.com/blockfrost/blockfrost-go\">blockfrost-go</a>\n        </td>\n    </tr>\n    <tr>\n        <td>Ruby</td>\n        <td>\n            <a href=\"https://github.com/blockfrost/blockfrost-ruby\">blockfrost-ruby</a>\n        </td>\n    </tr>\n    <tr>\n        <td>Java</td>\n        <td>\n            <a href=\"https://github.com/blockfrost/blockfrost-java\">blockfrost-java</a>\n        </td>\n    </tr>\n    <tr>\n        <td>Scala</td>\n        <td>\n            <a href=\"https://github.com/blockfrost/blockfrost-scala\">blockfrost-scala</a>\n        </td>\n    </tr>\n    <tr>\n        <td>Swift</td>\n        <td>\n            <a href=\"https://github.com/blockfrost/blockfrost-swift\">blockfrost-swift</a>\n        </td>\n    </tr>\n    <tr>\n        <td>Kotlin</td>\n        <td>\n            <a href=\"https://github.com/blockfrost/blockfrost-kotlin\">blockfrost-kotlin</a>\n        </td>\n    </tr>\n    <tr>\n        <td>Elixir</td>\n        <td>\n            <a href=\"https://github.com/blockfrost/blockfrost-elixir\">blockfrost-elixir</a>\n        </td>\n    </tr>\n    <tr>\n        <td>.NET</td>\n        <td>\n            <a href=\"https://github.com/blockfrost/blockfrost-dotnet\">blockfrost-dotnet</a>\n        </td>\n    </tr>\n    <tr>\n        <td>Arduino</td>\n        <td>\n            <a href=\"https://github.com/blockfrost/blockfrost-arduino\">blockfrost-arduino</a>\n        </td>\n    </tr>\n    <tr>\n        <td>PHP</td>\n        <td>\n            <a href=\"https://github.com/blockfrost/blockfrost-php\">blockfrost-php</a>\n        </td>\n    </tr>\n    <tr>\n        <td>Crystal</td>\n        <td>\n            <a href=\"https://github.com/blockfrost/blockfrost-crystal\">blockfrost-crystal</a>\n        </td>\n    </tr>\n  </tbody>\n</table>\n\n\nContact Support:\n Name: Blockfrost Team\n Email: contact@blockfrost.io",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "2199013"
	},
	"item": [
		{
			"name": "/",
			"item": [
				{
					"name": "Root endpoint",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								""
							]
						},
						"description": "Root endpoint has no other function than to point end users to documentation.\n"
					},
					"response": [
						{
							"name": "Information pointing to the documentation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"url\": \"<string>\",\n  \"version\": \"<string>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "Authentication secret is missing or invalid",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									]
								}
							},
							"status": "I'm a teapot (RFC 2324)",
							"code": 418,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "Usage limit reached",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "health",
			"item": [
				{
					"name": "clock",
					"item": [
						{
							"name": "Current backend time",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/health/clock",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"health",
										"clock"
									]
								},
								"description": "This endpoint provides the current UNIX time. Your application might\nuse this to verify if the client clock is not out of sync.\n"
							},
							"response": [
								{
									"name": "Return the current UNIX time in milliseconds.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/health/clock",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"health",
												"clock"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"server_time\": \"<long>\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/health/clock",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"health",
												"clock"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Authentication secret is missing or invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/health/clock",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"health",
												"clock"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/health/clock",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"health",
												"clock"
											]
										}
									},
									"status": "I'm a teapot (RFC 2324)",
									"code": 418,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Usage limit reached",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/health/clock",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"health",
												"clock"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/health/clock",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"health",
												"clock"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Backend health status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"health"
							]
						},
						"description": "Return backend status as a boolean. Your application should handle situations when backend for the given chain is unavailable.\n"
					},
					"response": [
						{
							"name": "Return the boolean indicating the health of the backend.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/health",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"health"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"is_healthy\": \"<boolean>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/health",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"health"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "Authentication secret is missing or invalid",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/health",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"health"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/health",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"health"
									]
								}
							},
							"status": "I'm a teapot (RFC 2324)",
							"code": 418,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "Usage limit reached",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/health",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"health"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/health",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"health"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "blocks",
			"item": [
				{
					"name": "latest",
					"item": [
						{
							"name": "txs",
							"item": [
								{
									"name": "Latest block transactions",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/blocks/latest/txs?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"blocks",
												"latest",
												"txs"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "Ordered by tx index in the block.\nThe ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											]
										},
										"description": "Return the transactions within the latest block."
									},
									"response": [
										{
											"name": "Return the contents of the block",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/latest/txs?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														"latest",
														"txs"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "Ordered by tx index in the block.\nThe ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  \"<string>\",\n  \"<string>\"\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/latest/txs?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														"latest",
														"txs"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "Ordered by tx index in the block.\nThe ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/latest/txs?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														"latest",
														"txs"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "Ordered by tx index in the block.\nThe ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/latest/txs?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														"latest",
														"txs"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "Ordered by tx index in the block.\nThe ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/latest/txs?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														"latest",
														"txs"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "Ordered by tx index in the block.\nThe ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/latest/txs?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														"latest",
														"txs"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "Ordered by tx index in the block.\nThe ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/latest/txs?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														"latest",
														"txs"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "Ordered by tx index in the block.\nThe ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Latest block",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/blocks/latest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocks",
										"latest"
									]
								},
								"description": "Return the latest block available to the backends, also known as the\ntip of the blockchain.\n"
							},
							"response": [
								{
									"name": "Return the contents of the block",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/blocks/latest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"blocks",
												"latest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"time\": \"<integer>\",\n  \"height\": \"<integer>\",\n  \"hash\": \"<string>\",\n  \"slot\": \"<integer>\",\n  \"epoch\": \"<integer>\",\n  \"epoch_slot\": \"<integer>\",\n  \"slot_leader\": \"<string>\",\n  \"size\": \"<integer>\",\n  \"tx_count\": \"<integer>\",\n  \"output\": \"<string>\",\n  \"fees\": \"<string>\",\n  \"block_vrf\": \"<string>\",\n  \"op_cert\": \"<string>\",\n  \"op_cert_counter\": \"<string>\",\n  \"previous_block\": \"<string>\",\n  \"next_block\": \"<string>\",\n  \"confirmations\": \"<integer>\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/blocks/latest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"blocks",
												"latest"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Authentication secret is missing or invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/blocks/latest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"blocks",
												"latest"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Component not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/blocks/latest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"blocks",
												"latest"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/blocks/latest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"blocks",
												"latest"
											]
										}
									},
									"status": "I'm a teapot (RFC 2324)",
									"code": 418,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Usage limit reached",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/blocks/latest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"blocks",
												"latest"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/blocks/latest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"blocks",
												"latest"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "{hash_or_number}",
					"item": [
						{
							"name": "next",
							"item": [
								{
									"name": "Listing of next blocks",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/blocks/:hash_or_number/next?count=100&page=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"blocks",
												":hash_or_number",
												"next"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												}
											],
											"variable": [
												{
													"key": "hash_or_number",
													"value": "<string>",
													"description": "(Required) Hash of the requested block."
												}
											]
										},
										"description": "Return the list of blocks following a specific block.\n"
									},
									"response": [
										{
											"name": "Return the contents of the block",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/:hash_or_number/next?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														":hash_or_number",
														"next"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														}
													],
													"variable": [
														{
															"key": "hash_or_number"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"time\": \"<integer>\",\n    \"height\": \"<integer>\",\n    \"hash\": \"<string>\",\n    \"slot\": \"<integer>\",\n    \"epoch\": \"<integer>\",\n    \"epoch_slot\": \"<integer>\",\n    \"slot_leader\": \"<string>\",\n    \"size\": \"<integer>\",\n    \"tx_count\": \"<integer>\",\n    \"output\": \"<string>\",\n    \"fees\": \"<string>\",\n    \"block_vrf\": \"<string>\",\n    \"op_cert\": \"<string>\",\n    \"op_cert_counter\": \"<string>\",\n    \"previous_block\": \"<string>\",\n    \"next_block\": \"<string>\",\n    \"confirmations\": \"<integer>\"\n  },\n  {\n    \"time\": \"<integer>\",\n    \"height\": \"<integer>\",\n    \"hash\": \"<string>\",\n    \"slot\": \"<integer>\",\n    \"epoch\": \"<integer>\",\n    \"epoch_slot\": \"<integer>\",\n    \"slot_leader\": \"<string>\",\n    \"size\": \"<integer>\",\n    \"tx_count\": \"<integer>\",\n    \"output\": \"<string>\",\n    \"fees\": \"<string>\",\n    \"block_vrf\": \"<string>\",\n    \"op_cert\": \"<string>\",\n    \"op_cert_counter\": \"<string>\",\n    \"previous_block\": \"<string>\",\n    \"next_block\": \"<string>\",\n    \"confirmations\": \"<integer>\"\n  }\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/:hash_or_number/next?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														":hash_or_number",
														"next"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														}
													],
													"variable": [
														{
															"key": "hash_or_number"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/:hash_or_number/next?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														":hash_or_number",
														"next"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														}
													],
													"variable": [
														{
															"key": "hash_or_number"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/:hash_or_number/next?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														":hash_or_number",
														"next"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														}
													],
													"variable": [
														{
															"key": "hash_or_number"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/:hash_or_number/next?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														":hash_or_number",
														"next"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														}
													],
													"variable": [
														{
															"key": "hash_or_number"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/:hash_or_number/next?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														":hash_or_number",
														"next"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														}
													],
													"variable": [
														{
															"key": "hash_or_number"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/:hash_or_number/next?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														":hash_or_number",
														"next"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														}
													],
													"variable": [
														{
															"key": "hash_or_number"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "previous",
							"item": [
								{
									"name": "Listing of previous blocks",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/blocks/:hash_or_number/previous?count=100&page=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"blocks",
												":hash_or_number",
												"previous"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												}
											],
											"variable": [
												{
													"key": "hash_or_number",
													"value": "<string>",
													"description": "(Required) Hash of the requested block"
												}
											]
										},
										"description": "Return the list of blocks preceding a specific block.\n"
									},
									"response": [
										{
											"name": "Return the contents of the block",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/:hash_or_number/previous?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														":hash_or_number",
														"previous"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														}
													],
													"variable": [
														{
															"key": "hash_or_number"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"time\": \"<integer>\",\n    \"height\": \"<integer>\",\n    \"hash\": \"<string>\",\n    \"slot\": \"<integer>\",\n    \"epoch\": \"<integer>\",\n    \"epoch_slot\": \"<integer>\",\n    \"slot_leader\": \"<string>\",\n    \"size\": \"<integer>\",\n    \"tx_count\": \"<integer>\",\n    \"output\": \"<string>\",\n    \"fees\": \"<string>\",\n    \"block_vrf\": \"<string>\",\n    \"op_cert\": \"<string>\",\n    \"op_cert_counter\": \"<string>\",\n    \"previous_block\": \"<string>\",\n    \"next_block\": \"<string>\",\n    \"confirmations\": \"<integer>\"\n  },\n  {\n    \"time\": \"<integer>\",\n    \"height\": \"<integer>\",\n    \"hash\": \"<string>\",\n    \"slot\": \"<integer>\",\n    \"epoch\": \"<integer>\",\n    \"epoch_slot\": \"<integer>\",\n    \"slot_leader\": \"<string>\",\n    \"size\": \"<integer>\",\n    \"tx_count\": \"<integer>\",\n    \"output\": \"<string>\",\n    \"fees\": \"<string>\",\n    \"block_vrf\": \"<string>\",\n    \"op_cert\": \"<string>\",\n    \"op_cert_counter\": \"<string>\",\n    \"previous_block\": \"<string>\",\n    \"next_block\": \"<string>\",\n    \"confirmations\": \"<integer>\"\n  }\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/:hash_or_number/previous?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														":hash_or_number",
														"previous"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														}
													],
													"variable": [
														{
															"key": "hash_or_number"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/:hash_or_number/previous?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														":hash_or_number",
														"previous"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														}
													],
													"variable": [
														{
															"key": "hash_or_number"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/:hash_or_number/previous?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														":hash_or_number",
														"previous"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														}
													],
													"variable": [
														{
															"key": "hash_or_number"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/:hash_or_number/previous?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														":hash_or_number",
														"previous"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														}
													],
													"variable": [
														{
															"key": "hash_or_number"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/:hash_or_number/previous?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														":hash_or_number",
														"previous"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														}
													],
													"variable": [
														{
															"key": "hash_or_number"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/:hash_or_number/previous?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														":hash_or_number",
														"previous"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														}
													],
													"variable": [
														{
															"key": "hash_or_number"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "txs",
							"item": [
								{
									"name": "Block transactions",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/blocks/:hash_or_number/txs?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"blocks",
												":hash_or_number",
												"txs"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "Ordered by tx index in the block.\nThe ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											],
											"variable": [
												{
													"key": "hash_or_number",
													"value": "<string>",
													"description": "(Required) Hash of the requested block."
												}
											]
										},
										"description": "Return the transactions within the block."
									},
									"response": [
										{
											"name": "Return the contents of the block",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/:hash_or_number/txs?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														":hash_or_number",
														"txs"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "Ordered by tx index in the block.\nThe ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "hash_or_number"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  \"<string>\",\n  \"<string>\"\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/:hash_or_number/txs?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														":hash_or_number",
														"txs"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "Ordered by tx index in the block.\nThe ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "hash_or_number"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/:hash_or_number/txs?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														":hash_or_number",
														"txs"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "Ordered by tx index in the block.\nThe ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "hash_or_number"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/:hash_or_number/txs?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														":hash_or_number",
														"txs"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "Ordered by tx index in the block.\nThe ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "hash_or_number"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/:hash_or_number/txs?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														":hash_or_number",
														"txs"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "Ordered by tx index in the block.\nThe ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "hash_or_number"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/:hash_or_number/txs?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														":hash_or_number",
														"txs"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "Ordered by tx index in the block.\nThe ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "hash_or_number"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/:hash_or_number/txs?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														":hash_or_number",
														"txs"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "Ordered by tx index in the block.\nThe ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "hash_or_number"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "addresses",
							"item": [
								{
									"name": "Addresses affected in a specific block",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/blocks/:hash_or_number/addresses?count=100&page=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"blocks",
												":hash_or_number",
												"addresses"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												}
											],
											"variable": [
												{
													"key": "hash_or_number",
													"value": "<string>",
													"description": "(Required) Hash of the requested block."
												}
											]
										},
										"description": "Return list of addresses affected in the specified block with additional information, sorted by the bech32 address, ascending."
									},
									"response": [
										{
											"name": "Return the contents of the block",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/:hash_or_number/addresses?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														":hash_or_number",
														"addresses"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														}
													],
													"variable": [
														{
															"key": "hash_or_number"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"address\": \"<string>\",\n    \"transactions\": [\n      {\n        \"tx_hash\": \"<string>\"\n      },\n      {\n        \"tx_hash\": \"<string>\"\n      }\n    ]\n  },\n  {\n    \"address\": \"<string>\",\n    \"transactions\": [\n      {\n        \"tx_hash\": \"<string>\"\n      },\n      {\n        \"tx_hash\": \"<string>\"\n      }\n    ]\n  }\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/:hash_or_number/addresses?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														":hash_or_number",
														"addresses"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														}
													],
													"variable": [
														{
															"key": "hash_or_number"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/:hash_or_number/addresses?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														":hash_or_number",
														"addresses"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														}
													],
													"variable": [
														{
															"key": "hash_or_number"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/:hash_or_number/addresses?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														":hash_or_number",
														"addresses"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														}
													],
													"variable": [
														{
															"key": "hash_or_number"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/:hash_or_number/addresses?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														":hash_or_number",
														"addresses"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														}
													],
													"variable": [
														{
															"key": "hash_or_number"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/:hash_or_number/addresses?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														":hash_or_number",
														"addresses"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														}
													],
													"variable": [
														{
															"key": "hash_or_number"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/:hash_or_number/addresses?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														":hash_or_number",
														"addresses"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														}
													],
													"variable": [
														{
															"key": "hash_or_number"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Specific block",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/blocks/:hash_or_number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocks",
										":hash_or_number"
									],
									"variable": [
										{
											"key": "hash_or_number",
											"value": "<string>",
											"description": "(Required) Hash or number of the requested block."
										}
									]
								},
								"description": "Return the content of a requested block.\n"
							},
							"response": [
								{
									"name": "Return the contents of the block",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/blocks/:hash_or_number",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"blocks",
												":hash_or_number"
											],
											"variable": [
												{
													"key": "hash_or_number"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"time\": \"<integer>\",\n  \"height\": \"<integer>\",\n  \"hash\": \"<string>\",\n  \"slot\": \"<integer>\",\n  \"epoch\": \"<integer>\",\n  \"epoch_slot\": \"<integer>\",\n  \"slot_leader\": \"<string>\",\n  \"size\": \"<integer>\",\n  \"tx_count\": \"<integer>\",\n  \"output\": \"<string>\",\n  \"fees\": \"<string>\",\n  \"block_vrf\": \"<string>\",\n  \"op_cert\": \"<string>\",\n  \"op_cert_counter\": \"<string>\",\n  \"previous_block\": \"<string>\",\n  \"next_block\": \"<string>\",\n  \"confirmations\": \"<integer>\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/blocks/:hash_or_number",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"blocks",
												":hash_or_number"
											],
											"variable": [
												{
													"key": "hash_or_number"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Authentication secret is missing or invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/blocks/:hash_or_number",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"blocks",
												":hash_or_number"
											],
											"variable": [
												{
													"key": "hash_or_number"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Component not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/blocks/:hash_or_number",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"blocks",
												":hash_or_number"
											],
											"variable": [
												{
													"key": "hash_or_number"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/blocks/:hash_or_number",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"blocks",
												":hash_or_number"
											],
											"variable": [
												{
													"key": "hash_or_number"
												}
											]
										}
									},
									"status": "I'm a teapot (RFC 2324)",
									"code": 418,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Usage limit reached",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/blocks/:hash_or_number",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"blocks",
												":hash_or_number"
											],
											"variable": [
												{
													"key": "hash_or_number"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/blocks/:hash_or_number",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"blocks",
												":hash_or_number"
											],
											"variable": [
												{
													"key": "hash_or_number"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "slot",
					"item": [
						{
							"name": "{slot_number}",
							"item": [
								{
									"name": "Specific block in a slot",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/blocks/slot/:slot_number",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"blocks",
												"slot",
												":slot_number"
											],
											"variable": [
												{
													"key": "slot_number",
													"value": "<integer>",
													"description": "(Required) Slot position for requested block."
												}
											]
										},
										"description": "Return the content of a requested block for a specific slot.\n"
									},
									"response": [
										{
											"name": "Return the contents of the block",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/slot/:slot_number",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														"slot",
														":slot_number"
													],
													"variable": [
														{
															"key": "slot_number"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"time\": \"<integer>\",\n  \"height\": \"<integer>\",\n  \"hash\": \"<string>\",\n  \"slot\": \"<integer>\",\n  \"epoch\": \"<integer>\",\n  \"epoch_slot\": \"<integer>\",\n  \"slot_leader\": \"<string>\",\n  \"size\": \"<integer>\",\n  \"tx_count\": \"<integer>\",\n  \"output\": \"<string>\",\n  \"fees\": \"<string>\",\n  \"block_vrf\": \"<string>\",\n  \"op_cert\": \"<string>\",\n  \"op_cert_counter\": \"<string>\",\n  \"previous_block\": \"<string>\",\n  \"next_block\": \"<string>\",\n  \"confirmations\": \"<integer>\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/slot/:slot_number",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														"slot",
														":slot_number"
													],
													"variable": [
														{
															"key": "slot_number"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/slot/:slot_number",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														"slot",
														":slot_number"
													],
													"variable": [
														{
															"key": "slot_number"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/slot/:slot_number",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														"slot",
														":slot_number"
													],
													"variable": [
														{
															"key": "slot_number"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/slot/:slot_number",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														"slot",
														":slot_number"
													],
													"variable": [
														{
															"key": "slot_number"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/slot/:slot_number",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														"slot",
														":slot_number"
													],
													"variable": [
														{
															"key": "slot_number"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/blocks/slot/:slot_number",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"blocks",
														"slot",
														":slot_number"
													],
													"variable": [
														{
															"key": "slot_number"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "epoch",
					"item": [
						{
							"name": "{epoch_number}",
							"item": [
								{
									"name": "slot",
									"item": [
										{
											"name": "{slot_number}",
											"item": [
												{
													"name": "Specific block in a slot in an epoch",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/blocks/epoch/:epoch_number/slot/:slot_number",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"blocks",
																"epoch",
																":epoch_number",
																"slot",
																":slot_number"
															],
															"variable": [
																{
																	"key": "epoch_number",
																	"value": "<integer>",
																	"description": "(Required) Epoch for specific epoch slot."
																},
																{
																	"key": "slot_number",
																	"value": "<integer>",
																	"description": "(Required) Slot position for requested block."
																}
															]
														},
														"description": "Return the content of a requested block for a specific slot in an epoch.\n"
													},
													"response": [
														{
															"name": "Return the contents of the block",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "project_id",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/blocks/epoch/:epoch_number/slot/:slot_number",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"blocks",
																		"epoch",
																		":epoch_number",
																		"slot",
																		":slot_number"
																	],
																	"variable": [
																		{
																			"key": "epoch_number"
																		},
																		{
																			"key": "slot_number"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"time\": \"<integer>\",\n  \"height\": \"<integer>\",\n  \"hash\": \"<string>\",\n  \"slot\": \"<integer>\",\n  \"epoch\": \"<integer>\",\n  \"epoch_slot\": \"<integer>\",\n  \"slot_leader\": \"<string>\",\n  \"size\": \"<integer>\",\n  \"tx_count\": \"<integer>\",\n  \"output\": \"<string>\",\n  \"fees\": \"<string>\",\n  \"block_vrf\": \"<string>\",\n  \"op_cert\": \"<string>\",\n  \"op_cert_counter\": \"<string>\",\n  \"previous_block\": \"<string>\",\n  \"next_block\": \"<string>\",\n  \"confirmations\": \"<integer>\"\n}"
														},
														{
															"name": "Bad request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "project_id",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/blocks/epoch/:epoch_number/slot/:slot_number",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"blocks",
																		"epoch",
																		":epoch_number",
																		"slot",
																		":slot_number"
																	],
																	"variable": [
																		{
																			"key": "epoch_number"
																		},
																		{
																			"key": "slot_number"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
														},
														{
															"name": "Authentication secret is missing or invalid",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "project_id",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/blocks/epoch/:epoch_number/slot/:slot_number",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"blocks",
																		"epoch",
																		":epoch_number",
																		"slot",
																		":slot_number"
																	],
																	"variable": [
																		{
																			"key": "epoch_number"
																		},
																		{
																			"key": "slot_number"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
														},
														{
															"name": "Component not found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "project_id",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/blocks/epoch/:epoch_number/slot/:slot_number",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"blocks",
																		"epoch",
																		":epoch_number",
																		"slot",
																		":slot_number"
																	],
																	"variable": [
																		{
																			"key": "epoch_number"
																		},
																		{
																			"key": "slot_number"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
														},
														{
															"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "project_id",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/blocks/epoch/:epoch_number/slot/:slot_number",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"blocks",
																		"epoch",
																		":epoch_number",
																		"slot",
																		":slot_number"
																	],
																	"variable": [
																		{
																			"key": "epoch_number"
																		},
																		{
																			"key": "slot_number"
																		}
																	]
																}
															},
															"status": "I'm a teapot (RFC 2324)",
															"code": 418,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
														},
														{
															"name": "Usage limit reached",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "project_id",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/blocks/epoch/:epoch_number/slot/:slot_number",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"blocks",
																		"epoch",
																		":epoch_number",
																		"slot",
																		":slot_number"
																	],
																	"variable": [
																		{
																			"key": "epoch_number"
																		},
																		{
																			"key": "slot_number"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
														},
														{
															"name": "Internal Server Error",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "project_id",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/blocks/epoch/:epoch_number/slot/:slot_number",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"blocks",
																		"epoch",
																		":epoch_number",
																		"slot",
																		":slot_number"
																	],
																	"variable": [
																		{
																			"key": "epoch_number"
																		},
																		{
																			"key": "slot_number"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "genesis",
			"item": [
				{
					"name": "Blockchain genesis",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/genesis",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"genesis"
							]
						},
						"description": "Return the information about blockchain genesis."
					},
					"response": [
						{
							"name": "Return the genesis parameters.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/genesis",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"genesis"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"active_slots_coefficient\": \"<number>\",\n  \"update_quorum\": \"<integer>\",\n  \"max_lovelace_supply\": \"<string>\",\n  \"network_magic\": \"<integer>\",\n  \"epoch_length\": \"<integer>\",\n  \"system_start\": \"<integer>\",\n  \"slots_per_kes_period\": \"<integer>\",\n  \"slot_length\": \"<integer>\",\n  \"max_kes_evolutions\": \"<integer>\",\n  \"security_param\": \"<integer>\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/genesis",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"genesis"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "Authentication secret is missing or invalid",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/genesis",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"genesis"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/genesis",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"genesis"
									]
								}
							},
							"status": "I'm a teapot (RFC 2324)",
							"code": 418,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "Usage limit reached",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/genesis",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"genesis"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/genesis",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"genesis"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "epochs",
			"item": [
				{
					"name": "latest",
					"item": [
						{
							"name": "parameters",
							"item": [
								{
									"name": "Latest epoch protocol parameters",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/epochs/latest/parameters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"epochs",
												"latest",
												"parameters"
											]
										},
										"description": "Return the protocol parameters for the latest epoch."
									},
									"response": [
										{
											"name": "Return the data about the epoch",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/latest/parameters",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														"latest",
														"parameters"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"epoch\": \"<integer>\",\n  \"min_fee_a\": \"<integer>\",\n  \"min_fee_b\": \"<integer>\",\n  \"max_block_size\": \"<integer>\",\n  \"max_tx_size\": \"<integer>\",\n  \"max_block_header_size\": \"<integer>\",\n  \"key_deposit\": \"<string>\",\n  \"pool_deposit\": \"<string>\",\n  \"e_max\": \"<integer>\",\n  \"n_opt\": \"<integer>\",\n  \"a0\": \"<number>\",\n  \"rho\": \"<number>\",\n  \"tau\": \"<number>\",\n  \"decentralisation_param\": \"<number>\",\n  \"extra_entropy\": \"<string>\",\n  \"protocol_major_ver\": \"<integer>\",\n  \"protocol_minor_ver\": \"<integer>\",\n  \"min_utxo\": \"<string>\",\n  \"min_pool_cost\": \"<string>\",\n  \"nonce\": \"<string>\",\n  \"cost_models\": {\n    \"quis_add\": \"Lor\",\n    \"tempor_aba\": 48849221.11176756,\n    \"aliqua0d6\": 23080912.767180845\n  },\n  \"price_mem\": \"<number>\",\n  \"price_step\": \"<number>\",\n  \"max_tx_ex_mem\": \"<string>\",\n  \"max_tx_ex_steps\": \"<string>\",\n  \"max_block_ex_mem\": \"<string>\",\n  \"max_block_ex_steps\": \"<string>\",\n  \"max_val_size\": \"<string>\",\n  \"collateral_percent\": \"<integer>\",\n  \"max_collateral_inputs\": \"<integer>\",\n  \"coins_per_utxo_size\": \"<string>\",\n  \"coins_per_utxo_word\": \"<string>\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/latest/parameters",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														"latest",
														"parameters"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/latest/parameters",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														"latest",
														"parameters"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/latest/parameters",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														"latest",
														"parameters"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/latest/parameters",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														"latest",
														"parameters"
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/latest/parameters",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														"latest",
														"parameters"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/latest/parameters",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														"latest",
														"parameters"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Latest epoch",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/epochs/latest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"epochs",
										"latest"
									]
								},
								"description": "Return the information about the latest, therefore current, epoch."
							},
							"response": [
								{
									"name": "Return the data about the epoch",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/epochs/latest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"epochs",
												"latest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"epoch\": \"<integer>\",\n  \"start_time\": \"<integer>\",\n  \"end_time\": \"<integer>\",\n  \"first_block_time\": \"<integer>\",\n  \"last_block_time\": \"<integer>\",\n  \"block_count\": \"<integer>\",\n  \"tx_count\": \"<integer>\",\n  \"output\": \"<string>\",\n  \"fees\": \"<string>\",\n  \"active_stake\": \"<string>\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/epochs/latest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"epochs",
												"latest"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Authentication secret is missing or invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/epochs/latest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"epochs",
												"latest"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Component not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/epochs/latest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"epochs",
												"latest"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/epochs/latest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"epochs",
												"latest"
											]
										}
									},
									"status": "I'm a teapot (RFC 2324)",
									"code": 418,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Usage limit reached",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/epochs/latest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"epochs",
												"latest"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/epochs/latest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"epochs",
												"latest"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "{number}",
					"item": [
						{
							"name": "next",
							"item": [
								{
									"name": "Listing of next epochs",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/epochs/:number/next?count=100&page=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"epochs",
												":number",
												"next"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												}
											],
											"variable": [
												{
													"key": "number",
													"value": "<integer>",
													"description": "(Required) Number of the requested epoch."
												}
											]
										},
										"description": "Return the list of epochs following a specific epoch."
									},
									"response": [
										{
											"name": "Return the data about the epoch",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/:number/next?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														":number",
														"next"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														}
													],
													"variable": [
														{
															"key": "number"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"epoch\": \"<integer>\",\n    \"start_time\": \"<integer>\",\n    \"end_time\": \"<integer>\",\n    \"first_block_time\": \"<integer>\",\n    \"last_block_time\": \"<integer>\",\n    \"block_count\": \"<integer>\",\n    \"tx_count\": \"<integer>\",\n    \"output\": \"<string>\",\n    \"fees\": \"<string>\",\n    \"active_stake\": \"<string>\"\n  },\n  {\n    \"epoch\": \"<integer>\",\n    \"start_time\": \"<integer>\",\n    \"end_time\": \"<integer>\",\n    \"first_block_time\": \"<integer>\",\n    \"last_block_time\": \"<integer>\",\n    \"block_count\": \"<integer>\",\n    \"tx_count\": \"<integer>\",\n    \"output\": \"<string>\",\n    \"fees\": \"<string>\",\n    \"active_stake\": \"<string>\"\n  }\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/:number/next?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														":number",
														"next"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														}
													],
													"variable": [
														{
															"key": "number"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/:number/next?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														":number",
														"next"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														}
													],
													"variable": [
														{
															"key": "number"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/:number/next?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														":number",
														"next"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														}
													],
													"variable": [
														{
															"key": "number"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/:number/next?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														":number",
														"next"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														}
													],
													"variable": [
														{
															"key": "number"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/:number/next?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														":number",
														"next"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														}
													],
													"variable": [
														{
															"key": "number"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/:number/next?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														":number",
														"next"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														}
													],
													"variable": [
														{
															"key": "number"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "previous",
							"item": [
								{
									"name": "Listing of previous epochs",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/epochs/:number/previous?count=100&page=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"epochs",
												":number",
												"previous"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results"
												}
											],
											"variable": [
												{
													"key": "number",
													"value": "<integer>",
													"description": "(Required) Number of the epoch"
												}
											]
										},
										"description": "Return the list of epochs preceding a specific epoch."
									},
									"response": [
										{
											"name": "Return the epoch data",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/:number/previous?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														":number",
														"previous"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results"
														}
													],
													"variable": [
														{
															"key": "number"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"epoch\": \"<integer>\",\n    \"start_time\": \"<integer>\",\n    \"end_time\": \"<integer>\",\n    \"first_block_time\": \"<integer>\",\n    \"last_block_time\": \"<integer>\",\n    \"block_count\": \"<integer>\",\n    \"tx_count\": \"<integer>\",\n    \"output\": \"<string>\",\n    \"fees\": \"<string>\",\n    \"active_stake\": \"<string>\"\n  },\n  {\n    \"epoch\": \"<integer>\",\n    \"start_time\": \"<integer>\",\n    \"end_time\": \"<integer>\",\n    \"first_block_time\": \"<integer>\",\n    \"last_block_time\": \"<integer>\",\n    \"block_count\": \"<integer>\",\n    \"tx_count\": \"<integer>\",\n    \"output\": \"<string>\",\n    \"fees\": \"<string>\",\n    \"active_stake\": \"<string>\"\n  }\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/:number/previous?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														":number",
														"previous"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results"
														}
													],
													"variable": [
														{
															"key": "number"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/:number/previous?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														":number",
														"previous"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results"
														}
													],
													"variable": [
														{
															"key": "number"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/:number/previous?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														":number",
														"previous"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results"
														}
													],
													"variable": [
														{
															"key": "number"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/:number/previous?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														":number",
														"previous"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results"
														}
													],
													"variable": [
														{
															"key": "number"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/:number/previous?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														":number",
														"previous"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results"
														}
													],
													"variable": [
														{
															"key": "number"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/:number/previous?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														":number",
														"previous"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results"
														}
													],
													"variable": [
														{
															"key": "number"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "stakes",
							"item": [
								{
									"name": "{pool_id}",
									"item": [
										{
											"name": "Stake distribution by pool",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/:number/stakes/:pool_id?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														":number",
														"stakes",
														":pool_id"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														}
													],
													"variable": [
														{
															"key": "number",
															"value": "<integer>",
															"description": "(Required) Number of the epoch"
														},
														{
															"key": "pool_id",
															"value": "<string>",
															"description": "(Required) Stake pool ID to filter"
														}
													]
												},
												"description": "Return the active stake distribution for the epoch specified by stake pool."
											},
											"response": [
												{
													"name": "Return the data about the epoch",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/epochs/:number/stakes/:pool_id?count=100&page=1",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"epochs",
																":number",
																"stakes",
																":pool_id"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																}
															],
															"variable": [
																{
																	"key": "number"
																},
																{
																	"key": "pool_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"stake_address\": \"<string>\",\n    \"amount\": \"<string>\"\n  },\n  {\n    \"stake_address\": \"<string>\",\n    \"amount\": \"<string>\"\n  }\n]"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/epochs/:number/stakes/:pool_id?count=100&page=1",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"epochs",
																":number",
																"stakes",
																":pool_id"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																}
															],
															"variable": [
																{
																	"key": "number"
																},
																{
																	"key": "pool_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Authentication secret is missing or invalid",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/epochs/:number/stakes/:pool_id?count=100&page=1",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"epochs",
																":number",
																"stakes",
																":pool_id"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																}
															],
															"variable": [
																{
																	"key": "number"
																},
																{
																	"key": "pool_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Component not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/epochs/:number/stakes/:pool_id?count=100&page=1",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"epochs",
																":number",
																"stakes",
																":pool_id"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																}
															],
															"variable": [
																{
																	"key": "number"
																},
																{
																	"key": "pool_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/epochs/:number/stakes/:pool_id?count=100&page=1",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"epochs",
																":number",
																"stakes",
																":pool_id"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																}
															],
															"variable": [
																{
																	"key": "number"
																},
																{
																	"key": "pool_id"
																}
															]
														}
													},
													"status": "I'm a teapot (RFC 2324)",
													"code": 418,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Usage limit reached",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/epochs/:number/stakes/:pool_id?count=100&page=1",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"epochs",
																":number",
																"stakes",
																":pool_id"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																}
															],
															"variable": [
																{
																	"key": "number"
																},
																{
																	"key": "pool_id"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/epochs/:number/stakes/:pool_id?count=100&page=1",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"epochs",
																":number",
																"stakes",
																":pool_id"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																}
															],
															"variable": [
																{
																	"key": "number"
																},
																{
																	"key": "pool_id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Stake distribution",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/epochs/:number/stakes?count=100&page=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"epochs",
												":number",
												"stakes"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												}
											],
											"variable": [
												{
													"key": "number",
													"value": "<integer>",
													"description": "(Required) Number of the epoch"
												}
											]
										},
										"description": "Return the active stake distribution for the specified epoch."
									},
									"response": [
										{
											"name": "Return the data about the epoch",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/:number/stakes?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														":number",
														"stakes"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														}
													],
													"variable": [
														{
															"key": "number"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"stake_address\": \"<string>\",\n    \"pool_id\": \"<string>\",\n    \"amount\": \"<string>\"\n  },\n  {\n    \"stake_address\": \"<string>\",\n    \"pool_id\": \"<string>\",\n    \"amount\": \"<string>\"\n  }\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/:number/stakes?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														":number",
														"stakes"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														}
													],
													"variable": [
														{
															"key": "number"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/:number/stakes?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														":number",
														"stakes"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														}
													],
													"variable": [
														{
															"key": "number"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/:number/stakes?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														":number",
														"stakes"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														}
													],
													"variable": [
														{
															"key": "number"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/:number/stakes?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														":number",
														"stakes"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														}
													],
													"variable": [
														{
															"key": "number"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/:number/stakes?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														":number",
														"stakes"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														}
													],
													"variable": [
														{
															"key": "number"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/:number/stakes?count=100&page=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														":number",
														"stakes"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														}
													],
													"variable": [
														{
															"key": "number"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "blocks",
							"item": [
								{
									"name": "{pool_id}",
									"item": [
										{
											"name": "Block distribution by pool",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/:number/blocks/:pool_id?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														":number",
														"blocks",
														":pool_id"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "number",
															"value": "<integer>",
															"description": "(Required) Number of the epoch"
														},
														{
															"key": "pool_id",
															"value": "<string>",
															"description": "(Required) Stake pool ID to filter"
														}
													]
												},
												"description": "Return the block minted for the epoch specified by stake pool."
											},
											"response": [
												{
													"name": "Return the data about the epoch",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/epochs/:number/blocks/:pool_id?count=100&page=1&order=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"epochs",
																":number",
																"blocks",
																":pool_id"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																},
																{
																	"key": "order",
																	"value": "asc",
																	"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																}
															],
															"variable": [
																{
																	"key": "number"
																},
																{
																	"key": "pool_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  \"<string>\",\n  \"<string>\"\n]"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/epochs/:number/blocks/:pool_id?count=100&page=1&order=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"epochs",
																":number",
																"blocks",
																":pool_id"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																},
																{
																	"key": "order",
																	"value": "asc",
																	"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																}
															],
															"variable": [
																{
																	"key": "number"
																},
																{
																	"key": "pool_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Authentication secret is missing or invalid",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/epochs/:number/blocks/:pool_id?count=100&page=1&order=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"epochs",
																":number",
																"blocks",
																":pool_id"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																},
																{
																	"key": "order",
																	"value": "asc",
																	"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																}
															],
															"variable": [
																{
																	"key": "number"
																},
																{
																	"key": "pool_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Component not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/epochs/:number/blocks/:pool_id?count=100&page=1&order=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"epochs",
																":number",
																"blocks",
																":pool_id"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																},
																{
																	"key": "order",
																	"value": "asc",
																	"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																}
															],
															"variable": [
																{
																	"key": "number"
																},
																{
																	"key": "pool_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/epochs/:number/blocks/:pool_id?count=100&page=1&order=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"epochs",
																":number",
																"blocks",
																":pool_id"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																},
																{
																	"key": "order",
																	"value": "asc",
																	"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																}
															],
															"variable": [
																{
																	"key": "number"
																},
																{
																	"key": "pool_id"
																}
															]
														}
													},
													"status": "I'm a teapot (RFC 2324)",
													"code": 418,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Usage limit reached",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/epochs/:number/blocks/:pool_id?count=100&page=1&order=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"epochs",
																":number",
																"blocks",
																":pool_id"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																},
																{
																	"key": "order",
																	"value": "asc",
																	"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																}
															],
															"variable": [
																{
																	"key": "number"
																},
																{
																	"key": "pool_id"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/epochs/:number/blocks/:pool_id?count=100&page=1&order=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"epochs",
																":number",
																"blocks",
																":pool_id"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																},
																{
																	"key": "order",
																	"value": "asc",
																	"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																}
															],
															"variable": [
																{
																	"key": "number"
																},
																{
																	"key": "pool_id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Block distribution",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/epochs/:number/blocks?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"epochs",
												":number",
												"blocks"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											],
											"variable": [
												{
													"key": "number",
													"value": "<integer>",
													"description": "(Required) Number of the epoch"
												}
											]
										},
										"description": "Return the blocks minted for the epoch specified."
									},
									"response": [
										{
											"name": "Return the data about the epoch",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/:number/blocks?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														":number",
														"blocks"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "number"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  \"<string>\",\n  \"<string>\"\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/:number/blocks?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														":number",
														"blocks"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "number"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/:number/blocks?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														":number",
														"blocks"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "number"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/:number/blocks?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														":number",
														"blocks"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "number"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/:number/blocks?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														":number",
														"blocks"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "number"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/:number/blocks?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														":number",
														"blocks"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "number"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/:number/blocks?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														":number",
														"blocks"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "number"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "parameters",
							"item": [
								{
									"name": "Protocol parameters",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/epochs/:number/parameters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"epochs",
												":number",
												"parameters"
											],
											"variable": [
												{
													"key": "number",
													"value": "<integer>",
													"description": "(Required) Number of the epoch"
												}
											]
										},
										"description": "Return the protocol parameters for the epoch specified."
									},
									"response": [
										{
											"name": "Return the data about the epoch",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/:number/parameters",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														":number",
														"parameters"
													],
													"variable": [
														{
															"key": "number"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"epoch\": \"<integer>\",\n  \"min_fee_a\": \"<integer>\",\n  \"min_fee_b\": \"<integer>\",\n  \"max_block_size\": \"<integer>\",\n  \"max_tx_size\": \"<integer>\",\n  \"max_block_header_size\": \"<integer>\",\n  \"key_deposit\": \"<string>\",\n  \"pool_deposit\": \"<string>\",\n  \"e_max\": \"<integer>\",\n  \"n_opt\": \"<integer>\",\n  \"a0\": \"<number>\",\n  \"rho\": \"<number>\",\n  \"tau\": \"<number>\",\n  \"decentralisation_param\": \"<number>\",\n  \"extra_entropy\": \"<string>\",\n  \"protocol_major_ver\": \"<integer>\",\n  \"protocol_minor_ver\": \"<integer>\",\n  \"min_utxo\": \"<string>\",\n  \"min_pool_cost\": \"<string>\",\n  \"nonce\": \"<string>\",\n  \"cost_models\": {\n    \"quis_add\": \"Lor\",\n    \"tempor_aba\": 48849221.11176756,\n    \"aliqua0d6\": 23080912.767180845\n  },\n  \"price_mem\": \"<number>\",\n  \"price_step\": \"<number>\",\n  \"max_tx_ex_mem\": \"<string>\",\n  \"max_tx_ex_steps\": \"<string>\",\n  \"max_block_ex_mem\": \"<string>\",\n  \"max_block_ex_steps\": \"<string>\",\n  \"max_val_size\": \"<string>\",\n  \"collateral_percent\": \"<integer>\",\n  \"max_collateral_inputs\": \"<integer>\",\n  \"coins_per_utxo_size\": \"<string>\",\n  \"coins_per_utxo_word\": \"<string>\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/:number/parameters",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														":number",
														"parameters"
													],
													"variable": [
														{
															"key": "number"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/:number/parameters",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														":number",
														"parameters"
													],
													"variable": [
														{
															"key": "number"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/:number/parameters",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														":number",
														"parameters"
													],
													"variable": [
														{
															"key": "number"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/:number/parameters",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														":number",
														"parameters"
													],
													"variable": [
														{
															"key": "number"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/:number/parameters",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														":number",
														"parameters"
													],
													"variable": [
														{
															"key": "number"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/epochs/:number/parameters",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"epochs",
														":number",
														"parameters"
													],
													"variable": [
														{
															"key": "number"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Specific epoch",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/epochs/:number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"epochs",
										":number"
									],
									"variable": [
										{
											"key": "number",
											"value": "<integer>",
											"description": "(Required) Number of the epoch"
										}
									]
								},
								"description": "Return the content of the requested epoch."
							},
							"response": [
								{
									"name": "Return the epoch data.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/epochs/:number",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"epochs",
												":number"
											],
											"variable": [
												{
													"key": "number"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"epoch\": \"<integer>\",\n  \"start_time\": \"<integer>\",\n  \"end_time\": \"<integer>\",\n  \"first_block_time\": \"<integer>\",\n  \"last_block_time\": \"<integer>\",\n  \"block_count\": \"<integer>\",\n  \"tx_count\": \"<integer>\",\n  \"output\": \"<string>\",\n  \"fees\": \"<string>\",\n  \"active_stake\": \"<string>\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/epochs/:number",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"epochs",
												":number"
											],
											"variable": [
												{
													"key": "number"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Authentication secret is missing or invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/epochs/:number",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"epochs",
												":number"
											],
											"variable": [
												{
													"key": "number"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Component not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/epochs/:number",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"epochs",
												":number"
											],
											"variable": [
												{
													"key": "number"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/epochs/:number",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"epochs",
												":number"
											],
											"variable": [
												{
													"key": "number"
												}
											]
										}
									},
									"status": "I'm a teapot (RFC 2324)",
									"code": 418,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Usage limit reached",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/epochs/:number",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"epochs",
												":number"
											],
											"variable": [
												{
													"key": "number"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/epochs/:number",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"epochs",
												":number"
											],
											"variable": [
												{
													"key": "number"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "txs",
			"item": [
				{
					"name": "{hash}",
					"item": [
						{
							"name": "utxos",
							"item": [
								{
									"name": "Transaction UTXOs",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/txs/:hash/utxos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"txs",
												":hash",
												"utxos"
											],
											"variable": [
												{
													"key": "hash",
													"value": "<string>",
													"description": "(Required) Hash of the requested transaction"
												}
											]
										},
										"description": "Return the inputs and UTXOs of the specific transaction."
									},
									"response": [
										{
											"name": "Return the contents of the transaction.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/utxos",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"utxos"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"hash\": \"<string>\",\n  \"inputs\": [\n    {\n      \"address\": \"<string>\",\n      \"amount\": [\n        {\n          \"unit\": \"<string>\",\n          \"quantity\": \"<string>\"\n        },\n        {\n          \"unit\": \"<string>\",\n          \"quantity\": \"<string>\"\n        }\n      ],\n      \"tx_hash\": \"<string>\",\n      \"output_index\": \"<integer>\",\n      \"data_hash\": \"<string>\",\n      \"inline_datum\": \"<string>\",\n      \"reference_script_hash\": \"<string>\",\n      \"collateral\": \"<boolean>\",\n      \"reference\": \"<boolean>\"\n    },\n    {\n      \"address\": \"<string>\",\n      \"amount\": [\n        {\n          \"unit\": \"<string>\",\n          \"quantity\": \"<string>\"\n        },\n        {\n          \"unit\": \"<string>\",\n          \"quantity\": \"<string>\"\n        }\n      ],\n      \"tx_hash\": \"<string>\",\n      \"output_index\": \"<integer>\",\n      \"data_hash\": \"<string>\",\n      \"inline_datum\": \"<string>\",\n      \"reference_script_hash\": \"<string>\",\n      \"collateral\": \"<boolean>\",\n      \"reference\": \"<boolean>\"\n    }\n  ],\n  \"outputs\": [\n    {\n      \"address\": \"<string>\",\n      \"amount\": [\n        {\n          \"unit\": \"<string>\",\n          \"quantity\": \"<string>\"\n        },\n        {\n          \"unit\": \"<string>\",\n          \"quantity\": \"<string>\"\n        }\n      ],\n      \"output_index\": \"<integer>\",\n      \"data_hash\": \"<string>\",\n      \"inline_datum\": \"<string>\",\n      \"collateral\": \"<boolean>\",\n      \"reference_script_hash\": \"<string>\"\n    },\n    {\n      \"address\": \"<string>\",\n      \"amount\": [\n        {\n          \"unit\": \"<string>\",\n          \"quantity\": \"<string>\"\n        },\n        {\n          \"unit\": \"<string>\",\n          \"quantity\": \"<string>\"\n        }\n      ],\n      \"output_index\": \"<integer>\",\n      \"data_hash\": \"<string>\",\n      \"inline_datum\": \"<string>\",\n      \"collateral\": \"<boolean>\",\n      \"reference_script_hash\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/utxos",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"utxos"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/utxos",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"utxos"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/utxos",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"utxos"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/utxos",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"utxos"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/utxos",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"utxos"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/utxos",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"utxos"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "stakes",
							"item": [
								{
									"name": "Transaction stake addresses certificates",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/txs/:hash/stakes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"txs",
												":hash",
												"stakes"
											],
											"variable": [
												{
													"key": "hash",
													"value": "<string>",
													"description": "(Required) Hash of the requested transaction."
												}
											]
										},
										"description": "Obtain information about (de)registration of stake addresses within a transaction.\n"
									},
									"response": [
										{
											"name": "Obtain information about (de)registration of stake addresses within a transaction.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/stakes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"stakes"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"cert_index\": \"<integer>\",\n    \"address\": \"<string>\",\n    \"registration\": \"<boolean>\"\n  },\n  {\n    \"cert_index\": \"<integer>\",\n    \"address\": \"<string>\",\n    \"registration\": \"<boolean>\"\n  }\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/stakes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"stakes"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/stakes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"stakes"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/stakes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"stakes"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/stakes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"stakes"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/stakes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"stakes"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/stakes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"stakes"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "delegations",
							"item": [
								{
									"name": "Transaction delegation certificates",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/txs/:hash/delegations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"txs",
												":hash",
												"delegations"
											],
											"variable": [
												{
													"key": "hash",
													"value": "<string>",
													"description": "(Required) Hash of the requested transaction."
												}
											]
										},
										"description": "Obtain information about delegation certificates of a specific transaction.\n"
									},
									"response": [
										{
											"name": "Obtain information about delegation certificates of a specific transaction",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/delegations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"delegations"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"index\": \"<integer>\",\n    \"cert_index\": \"<integer>\",\n    \"address\": \"<string>\",\n    \"pool_id\": \"<string>\",\n    \"active_epoch\": \"<integer>\"\n  },\n  {\n    \"index\": \"<integer>\",\n    \"cert_index\": \"<integer>\",\n    \"address\": \"<string>\",\n    \"pool_id\": \"<string>\",\n    \"active_epoch\": \"<integer>\"\n  }\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/delegations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"delegations"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/delegations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"delegations"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/delegations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"delegations"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/delegations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"delegations"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/delegations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"delegations"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/delegations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"delegations"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "withdrawals",
							"item": [
								{
									"name": "Transaction withdrawal",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/txs/:hash/withdrawals",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"txs",
												":hash",
												"withdrawals"
											],
											"variable": [
												{
													"key": "hash",
													"value": "<string>",
													"description": "(Required) Hash of the requested transaction."
												}
											]
										},
										"description": "Obtain information about withdrawals of a specific transaction."
									},
									"response": [
										{
											"name": "Obtain information about withdrawals of a specific transaction.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/withdrawals",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"withdrawals"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"address\": \"<string>\",\n    \"amount\": \"<string>\"\n  },\n  {\n    \"address\": \"<string>\",\n    \"amount\": \"<string>\"\n  }\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/withdrawals",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"withdrawals"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/withdrawals",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"withdrawals"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/withdrawals",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"withdrawals"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/withdrawals",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"withdrawals"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/withdrawals",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"withdrawals"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/withdrawals",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"withdrawals"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "mirs",
							"item": [
								{
									"name": "Transaction MIRs",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/txs/:hash/mirs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"txs",
												":hash",
												"mirs"
											],
											"variable": [
												{
													"key": "hash",
													"value": "<string>",
													"description": "(Required) Hash of the requested transaction."
												}
											]
										},
										"description": "Obtain information about Move Instantaneous Rewards (MIRs) of a specific transaction."
									},
									"response": [
										{
											"name": "Obtain information about Move Instantaneous Rewards (MIRs) of a specific transaction.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/mirs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"mirs"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"pot\": \"treasury\",\n    \"cert_index\": \"<integer>\",\n    \"address\": \"<string>\",\n    \"amount\": \"<string>\"\n  },\n  {\n    \"pot\": \"reserve\",\n    \"cert_index\": \"<integer>\",\n    \"address\": \"<string>\",\n    \"amount\": \"<string>\"\n  }\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/mirs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"mirs"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/mirs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"mirs"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/mirs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"mirs"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/mirs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"mirs"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/mirs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"mirs"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/mirs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"mirs"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "pool_updates",
							"item": [
								{
									"name": "Transaction stake pool registration and update certificates",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/txs/:hash/pool_updates",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"txs",
												":hash",
												"pool_updates"
											],
											"variable": [
												{
													"key": "hash",
													"value": "<string>",
													"description": "(Required) Hash of the requested transaction"
												}
											]
										},
										"description": "Obtain information about stake pool registration and update certificates of a specific transaction.\n"
									},
									"response": [
										{
											"name": "Obtain information about stake pool certificates of a specific transaction",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/pool_updates",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"pool_updates"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"cert_index\": \"<integer>\",\n    \"pool_id\": \"<string>\",\n    \"vrf_key\": \"<string>\",\n    \"pledge\": \"<string>\",\n    \"margin_cost\": \"<number>\",\n    \"fixed_cost\": \"<string>\",\n    \"reward_account\": \"<string>\",\n    \"owners\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"metadata\": {\n      \"url\": \"<string>\",\n      \"hash\": \"<string>\",\n      \"ticker\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"homepage\": \"<string>\"\n    },\n    \"relays\": [\n      {\n        \"ipv4\": \"<string>\",\n        \"ipv6\": \"<string>\",\n        \"dns\": \"<string>\",\n        \"dns_srv\": \"<string>\",\n        \"port\": \"<integer>\"\n      },\n      {\n        \"ipv4\": \"<string>\",\n        \"ipv6\": \"<string>\",\n        \"dns\": \"<string>\",\n        \"dns_srv\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    ],\n    \"active_epoch\": \"<integer>\"\n  },\n  {\n    \"cert_index\": \"<integer>\",\n    \"pool_id\": \"<string>\",\n    \"vrf_key\": \"<string>\",\n    \"pledge\": \"<string>\",\n    \"margin_cost\": \"<number>\",\n    \"fixed_cost\": \"<string>\",\n    \"reward_account\": \"<string>\",\n    \"owners\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"metadata\": {\n      \"url\": \"<string>\",\n      \"hash\": \"<string>\",\n      \"ticker\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"homepage\": \"<string>\"\n    },\n    \"relays\": [\n      {\n        \"ipv4\": \"<string>\",\n        \"ipv6\": \"<string>\",\n        \"dns\": \"<string>\",\n        \"dns_srv\": \"<string>\",\n        \"port\": \"<integer>\"\n      },\n      {\n        \"ipv4\": \"<string>\",\n        \"ipv6\": \"<string>\",\n        \"dns\": \"<string>\",\n        \"dns_srv\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    ],\n    \"active_epoch\": \"<integer>\"\n  }\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/pool_updates",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"pool_updates"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/pool_updates",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"pool_updates"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/pool_updates",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"pool_updates"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/pool_updates",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"pool_updates"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/pool_updates",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"pool_updates"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/pool_updates",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"pool_updates"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "pool_retires",
							"item": [
								{
									"name": "Transaction stake pool retirement certificates",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/txs/:hash/pool_retires",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"txs",
												":hash",
												"pool_retires"
											],
											"variable": [
												{
													"key": "hash",
													"value": "<string>",
													"description": "(Required) Hash of the requested transaction"
												}
											]
										},
										"description": "Obtain information about stake pool retirements within a specific transaction.\n"
									},
									"response": [
										{
											"name": "Obtain information about stake pool retirements within a specific transaction.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/pool_retires",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"pool_retires"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"cert_index\": \"<integer>\",\n    \"pool_id\": \"<string>\",\n    \"retiring_epoch\": \"<integer>\"\n  },\n  {\n    \"cert_index\": \"<integer>\",\n    \"pool_id\": \"<string>\",\n    \"retiring_epoch\": \"<integer>\"\n  }\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/pool_retires",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"pool_retires"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/pool_retires",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"pool_retires"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/pool_retires",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"pool_retires"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/pool_retires",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"pool_retires"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/pool_retires",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"pool_retires"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/pool_retires",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"pool_retires"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "metadata",
							"item": [
								{
									"name": "cbor",
									"item": [
										{
											"name": "Transaction metadata in CBOR",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/metadata/cbor",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"metadata",
														"cbor"
													],
													"variable": [
														{
															"key": "hash",
															"value": "<string>",
															"description": "(Required) Hash of the requested transaction"
														}
													]
												},
												"description": "Obtain the transaction metadata in CBOR."
											},
											"response": [
												{
													"name": "Obtain metadata information associated with a specific transaction.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/txs/:hash/metadata/cbor",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"txs",
																":hash",
																"metadata",
																"cbor"
															],
															"variable": [
																{
																	"key": "hash"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"label\": \"<string>\",\n    \"cbor_metadata\": \"<string>\",\n    \"metadata\": \"<string>\"\n  },\n  {\n    \"label\": \"<string>\",\n    \"cbor_metadata\": \"<string>\",\n    \"metadata\": \"<string>\"\n  }\n]"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/txs/:hash/metadata/cbor",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"txs",
																":hash",
																"metadata",
																"cbor"
															],
															"variable": [
																{
																	"key": "hash"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Authentication secret is missing or invalid",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/txs/:hash/metadata/cbor",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"txs",
																":hash",
																"metadata",
																"cbor"
															],
															"variable": [
																{
																	"key": "hash"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Component not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/txs/:hash/metadata/cbor",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"txs",
																":hash",
																"metadata",
																"cbor"
															],
															"variable": [
																{
																	"key": "hash"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/txs/:hash/metadata/cbor",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"txs",
																":hash",
																"metadata",
																"cbor"
															],
															"variable": [
																{
																	"key": "hash"
																}
															]
														}
													},
													"status": "I'm a teapot (RFC 2324)",
													"code": 418,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Usage limit reached",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/txs/:hash/metadata/cbor",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"txs",
																":hash",
																"metadata",
																"cbor"
															],
															"variable": [
																{
																	"key": "hash"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/txs/:hash/metadata/cbor",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"txs",
																":hash",
																"metadata",
																"cbor"
															],
															"variable": [
																{
																	"key": "hash"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Transaction metadata",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/txs/:hash/metadata",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"txs",
												":hash",
												"metadata"
											],
											"variable": [
												{
													"key": "hash",
													"value": "<string>",
													"description": "(Required) Hash of the requested transaction"
												}
											]
										},
										"description": "Obtain the transaction metadata."
									},
									"response": [
										{
											"name": "Obtain metadata information associated with a specific transaction.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"metadata"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"label\": \"<string>\",\n    \"json_metadata\": \"<string>\"\n  },\n  {\n    \"label\": \"<string>\",\n    \"json_metadata\": \"<string>\"\n  }\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"metadata"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"metadata"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"metadata"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"metadata"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"metadata"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"metadata"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "redeemers",
							"item": [
								{
									"name": "Transaction redeemers",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/txs/:hash/redeemers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"txs",
												":hash",
												"redeemers"
											],
											"variable": [
												{
													"key": "hash",
													"value": "<string>",
													"description": "(Required) Hash of the requested transaction"
												}
											]
										},
										"description": "Obtain the transaction redeemers."
									},
									"response": [
										{
											"name": "Obtain information about redeemers within a specific transaction.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/redeemers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"redeemers"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"tx_index\": \"<integer>\",\n    \"purpose\": \"cert\",\n    \"unit_mem\": \"<string>\",\n    \"unit_steps\": \"<string>\",\n    \"script_hash\": \"<string>\",\n    \"redeemer_data_hash\": \"<string>\",\n    \"datum_hash\": \"<string>\",\n    \"fee\": \"<string>\"\n  },\n  {\n    \"tx_index\": \"<integer>\",\n    \"purpose\": \"mint\",\n    \"unit_mem\": \"<string>\",\n    \"unit_steps\": \"<string>\",\n    \"script_hash\": \"<string>\",\n    \"redeemer_data_hash\": \"<string>\",\n    \"datum_hash\": \"<string>\",\n    \"fee\": \"<string>\"\n  }\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/redeemers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"redeemers"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/redeemers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"redeemers"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/redeemers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"redeemers"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/redeemers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"redeemers"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/redeemers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"redeemers"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/txs/:hash/redeemers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"txs",
														":hash",
														"redeemers"
													],
													"variable": [
														{
															"key": "hash"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Specific transaction",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/txs/:hash",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"txs",
										":hash"
									],
									"variable": [
										{
											"key": "hash",
											"value": "<string>",
											"description": "(Required) Hash of the requested transaction"
										}
									]
								},
								"description": "Return content of the requested transaction."
							},
							"response": [
								{
									"name": "Return the contents of the transaction.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/txs/:hash",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"txs",
												":hash"
											],
											"variable": [
												{
													"key": "hash"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"hash\": \"<string>\",\n  \"block\": \"<string>\",\n  \"block_height\": \"<integer>\",\n  \"block_time\": \"<integer>\",\n  \"slot\": \"<integer>\",\n  \"index\": \"<integer>\",\n  \"output_amount\": [\n    {\n      \"unit\": \"<string>\",\n      \"quantity\": \"<string>\"\n    },\n    {\n      \"unit\": \"<string>\",\n      \"quantity\": \"<string>\"\n    }\n  ],\n  \"fees\": \"<string>\",\n  \"deposit\": \"<string>\",\n  \"size\": \"<integer>\",\n  \"invalid_before\": \"<string>\",\n  \"invalid_hereafter\": \"<string>\",\n  \"utxo_count\": \"<integer>\",\n  \"withdrawal_count\": \"<integer>\",\n  \"mir_cert_count\": \"<integer>\",\n  \"delegation_count\": \"<integer>\",\n  \"stake_cert_count\": \"<integer>\",\n  \"pool_update_count\": \"<integer>\",\n  \"pool_retire_count\": \"<integer>\",\n  \"asset_mint_or_burn_count\": \"<integer>\",\n  \"redeemer_count\": \"<integer>\",\n  \"valid_contract\": \"<boolean>\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/txs/:hash",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"txs",
												":hash"
											],
											"variable": [
												{
													"key": "hash"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Authentication secret is missing or invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/txs/:hash",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"txs",
												":hash"
											],
											"variable": [
												{
													"key": "hash"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Component not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/txs/:hash",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"txs",
												":hash"
											],
											"variable": [
												{
													"key": "hash"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/txs/:hash",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"txs",
												":hash"
											],
											"variable": [
												{
													"key": "hash"
												}
											]
										}
									},
									"status": "I'm a teapot (RFC 2324)",
									"code": 418,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Usage limit reached",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/txs/:hash",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"txs",
												":hash"
											],
											"variable": [
												{
													"key": "hash"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/txs/:hash",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"txs",
												":hash"
											],
											"variable": [
												{
													"key": "hash"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "tx",
			"item": [
				{
					"name": "submit",
					"item": [
						{
							"name": "Submit a transaction",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/cbor"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<string>"
								},
								"url": {
									"raw": "{{baseUrl}}/tx/submit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tx",
										"submit"
									]
								},
								"description": "Submit an already serialized transaction to the network.\n\n<p>\n  <span class=\"hosted\">Hosted</span> Endpoint only available for hosted variant.\n</p>\n"
							},
							"response": [
								{
									"name": "Return the ID of the submitted transaction.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/cbor"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<string>"
										},
										"url": {
											"raw": "{{baseUrl}}/tx/submit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tx",
												"submit"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "<string>"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/cbor"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<string>"
										},
										"url": {
											"raw": "{{baseUrl}}/tx/submit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tx",
												"submit"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Authentication secret is missing or invalid",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/cbor"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<string>"
										},
										"url": {
											"raw": "{{baseUrl}}/tx/submit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tx",
												"submit"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Component not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/cbor"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<string>"
										},
										"url": {
											"raw": "{{baseUrl}}/tx/submit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tx",
												"submit"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/cbor"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<string>"
										},
										"url": {
											"raw": "{{baseUrl}}/tx/submit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tx",
												"submit"
											]
										}
									},
									"status": "I'm a teapot (RFC 2324)",
									"code": 418,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Mempool is already full, not accepting new txs straight away",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/cbor"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<string>"
										},
										"url": {
											"raw": "{{baseUrl}}/tx/submit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tx",
												"submit"
											]
										}
									},
									"status": "Unordered Collection (RFC 3648)",
									"code": 425,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Usage limit reached",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/cbor"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<string>"
										},
										"url": {
											"raw": "{{baseUrl}}/tx/submit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tx",
												"submit"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/cbor"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<string>"
										},
										"url": {
											"raw": "{{baseUrl}}/tx/submit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tx",
												"submit"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "accounts",
			"item": [
				{
					"name": "{stake_address}",
					"item": [
						{
							"name": "rewards",
							"item": [
								{
									"name": "Account reward history",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:stake_address/rewards?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":stake_address",
												"rewards"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											],
											"variable": [
												{
													"key": "stake_address",
													"value": "<string>",
													"description": "(Required) Bech32 stake address."
												}
											]
										},
										"description": "Obtain information about the reward history of a specific account.\n"
									},
									"response": [
										{
											"name": "Return the account content.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/rewards?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"rewards"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"epoch\": \"<integer>\",\n    \"amount\": \"<string>\",\n    \"pool_id\": \"<string>\",\n    \"type\": \"pool_deposit_refund\"\n  },\n  {\n    \"epoch\": \"<integer>\",\n    \"amount\": \"<string>\",\n    \"pool_id\": \"<string>\",\n    \"type\": \"member\"\n  }\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/rewards?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"rewards"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/rewards?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"rewards"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/rewards?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"rewards"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/rewards?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"rewards"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/rewards?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"rewards"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/rewards?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"rewards"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "history",
							"item": [
								{
									"name": "Account history",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:stake_address/history?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":stake_address",
												"history"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											],
											"variable": [
												{
													"key": "stake_address",
													"value": "<string>",
													"description": "(Required) Bech32 stake address."
												}
											]
										},
										"description": "Obtain information about the history of a specific account.\n"
									},
									"response": [
										{
											"name": "Return the account content.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/history?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"history"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"active_epoch\": \"<integer>\",\n    \"amount\": \"<string>\",\n    \"pool_id\": \"<string>\"\n  },\n  {\n    \"active_epoch\": \"<integer>\",\n    \"amount\": \"<string>\",\n    \"pool_id\": \"<string>\"\n  }\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/history?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"history"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/history?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"history"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/history?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"history"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/history?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"history"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/history?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"history"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/history?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"history"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "delegations",
							"item": [
								{
									"name": "Account delegation history",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:stake_address/delegations?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":stake_address",
												"delegations"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											],
											"variable": [
												{
													"key": "stake_address",
													"value": "<string>",
													"description": "(Required) Bech32 stake address."
												}
											]
										},
										"description": "Obtain information about the delegation of a specific account."
									},
									"response": [
										{
											"name": "Return the account delegations content",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/delegations?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"delegations"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"active_epoch\": \"<integer>\",\n    \"tx_hash\": \"<string>\",\n    \"amount\": \"<string>\",\n    \"pool_id\": \"<string>\"\n  },\n  {\n    \"active_epoch\": \"<integer>\",\n    \"tx_hash\": \"<string>\",\n    \"amount\": \"<string>\",\n    \"pool_id\": \"<string>\"\n  }\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/delegations?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"delegations"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/delegations?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"delegations"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/delegations?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"delegations"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/delegations?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"delegations"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/delegations?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"delegations"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/delegations?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"delegations"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "registrations",
							"item": [
								{
									"name": "Account registration history",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:stake_address/registrations?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":stake_address",
												"registrations"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											],
											"variable": [
												{
													"key": "stake_address",
													"value": "<string>",
													"description": "(Required) Bech32 stake address."
												}
											]
										},
										"description": "Obtain information about the registrations and deregistrations of a specific account.\n"
									},
									"response": [
										{
											"name": "Return the account registration content.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/registrations?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"registrations"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"tx_hash\": \"<string>\",\n    \"action\": \"deregistered\"\n  },\n  {\n    \"tx_hash\": \"<string>\",\n    \"action\": \"registered\"\n  }\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/registrations?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"registrations"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/registrations?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"registrations"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/registrations?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"registrations"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/registrations?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"registrations"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/registrations?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"registrations"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/registrations?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"registrations"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "withdrawals",
							"item": [
								{
									"name": "Account withdrawal history",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:stake_address/withdrawals?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":stake_address",
												"withdrawals"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											],
											"variable": [
												{
													"key": "stake_address",
													"value": "<string>",
													"description": "(Required) Bech32 stake address."
												}
											]
										},
										"description": "Obtain information about the withdrawals of a specific account.\n"
									},
									"response": [
										{
											"name": "Return the account withdrawal content.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/withdrawals?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"withdrawals"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"tx_hash\": \"<string>\",\n    \"amount\": \"<string>\"\n  },\n  {\n    \"tx_hash\": \"<string>\",\n    \"amount\": \"<string>\"\n  }\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/withdrawals?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"withdrawals"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/withdrawals?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"withdrawals"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/withdrawals?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"withdrawals"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/withdrawals?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"withdrawals"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/withdrawals?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"withdrawals"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/withdrawals?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"withdrawals"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "mirs",
							"item": [
								{
									"name": "Account MIR history",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:stake_address/mirs?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":stake_address",
												"mirs"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											],
											"variable": [
												{
													"key": "stake_address",
													"value": "<string>",
													"description": "(Required) Bech32 stake address."
												}
											]
										},
										"description": "Obtain information about the MIRs of a specific account.\n"
									},
									"response": [
										{
											"name": "Return the account MIR content.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/mirs?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"mirs"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"tx_hash\": \"<string>\",\n    \"amount\": \"<string>\"\n  },\n  {\n    \"tx_hash\": \"<string>\",\n    \"amount\": \"<string>\"\n  }\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/mirs?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"mirs"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/mirs?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"mirs"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/mirs?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"mirs"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/mirs?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"mirs"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/mirs?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"mirs"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/mirs?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"mirs"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "addresses",
							"item": [
								{
									"name": "assets",
									"item": [
										{
											"name": "Assets associated with the account addresses",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/addresses/assets?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"addresses",
														"assets"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address",
															"value": "<string>",
															"description": "(Required) Bech32 stake address."
														}
													]
												},
												"description": "Obtain information about assets associated with addresses of a specific account.\n<b>Be careful</b>, as an account could be part of a mangled address and does not necessarily mean the addresses are owned by user as the account.\n"
											},
											"response": [
												{
													"name": "Return the account addresses content",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/accounts/:stake_address/addresses/assets?count=100&page=1&order=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"accounts",
																":stake_address",
																"addresses",
																"assets"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																},
																{
																	"key": "order",
																	"value": "asc",
																	"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																}
															],
															"variable": [
																{
																	"key": "stake_address"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"unit\": \"<string>\",\n    \"quantity\": \"<string>\"\n  },\n  {\n    \"unit\": \"<string>\",\n    \"quantity\": \"<string>\"\n  }\n]"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/accounts/:stake_address/addresses/assets?count=100&page=1&order=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"accounts",
																":stake_address",
																"addresses",
																"assets"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																},
																{
																	"key": "order",
																	"value": "asc",
																	"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																}
															],
															"variable": [
																{
																	"key": "stake_address"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Authentication secret is missing or invalid",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/accounts/:stake_address/addresses/assets?count=100&page=1&order=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"accounts",
																":stake_address",
																"addresses",
																"assets"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																},
																{
																	"key": "order",
																	"value": "asc",
																	"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																}
															],
															"variable": [
																{
																	"key": "stake_address"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Component not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/accounts/:stake_address/addresses/assets?count=100&page=1&order=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"accounts",
																":stake_address",
																"addresses",
																"assets"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																},
																{
																	"key": "order",
																	"value": "asc",
																	"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																}
															],
															"variable": [
																{
																	"key": "stake_address"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/accounts/:stake_address/addresses/assets?count=100&page=1&order=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"accounts",
																":stake_address",
																"addresses",
																"assets"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																},
																{
																	"key": "order",
																	"value": "asc",
																	"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																}
															],
															"variable": [
																{
																	"key": "stake_address"
																}
															]
														}
													},
													"status": "I'm a teapot (RFC 2324)",
													"code": 418,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Usage limit reached",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/accounts/:stake_address/addresses/assets?count=100&page=1&order=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"accounts",
																":stake_address",
																"addresses",
																"assets"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																},
																{
																	"key": "order",
																	"value": "asc",
																	"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																}
															],
															"variable": [
																{
																	"key": "stake_address"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/accounts/:stake_address/addresses/assets?count=100&page=1&order=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"accounts",
																":stake_address",
																"addresses",
																"assets"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																},
																{
																	"key": "order",
																	"value": "asc",
																	"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																}
															],
															"variable": [
																{
																	"key": "stake_address"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "total",
									"item": [
										{
											"name": "Detailed information about account associated addresses",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/addresses/total",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"addresses",
														"total"
													],
													"variable": [
														{
															"key": "stake_address",
															"value": "<string>",
															"description": "(Required) Bech32 address."
														}
													]
												},
												"description": "Obtain summed details about all addresses associated with a given account.\n<b>Be careful</b>, as an account could be part of a mangled address and does not necessarily mean the addresses are owned by user as the account.\n"
											},
											"response": [
												{
													"name": "Return the Address details.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/accounts/:stake_address/addresses/total",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"accounts",
																":stake_address",
																"addresses",
																"total"
															],
															"variable": [
																{
																	"key": "stake_address"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"stake_address\": \"<string>\",\n  \"received_sum\": [\n    {\n      \"unit\": \"<string>\",\n      \"quantity\": \"<string>\"\n    },\n    {\n      \"unit\": \"<string>\",\n      \"quantity\": \"<string>\"\n    }\n  ],\n  \"sent_sum\": [\n    {\n      \"unit\": \"<string>\",\n      \"quantity\": \"<string>\"\n    },\n    {\n      \"unit\": \"<string>\",\n      \"quantity\": \"<string>\"\n    }\n  ],\n  \"tx_count\": \"<integer>\"\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/accounts/:stake_address/addresses/total",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"accounts",
																":stake_address",
																"addresses",
																"total"
															],
															"variable": [
																{
																	"key": "stake_address"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Authentication secret is missing or invalid",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/accounts/:stake_address/addresses/total",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"accounts",
																":stake_address",
																"addresses",
																"total"
															],
															"variable": [
																{
																	"key": "stake_address"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Component not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/accounts/:stake_address/addresses/total",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"accounts",
																":stake_address",
																"addresses",
																"total"
															],
															"variable": [
																{
																	"key": "stake_address"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/accounts/:stake_address/addresses/total",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"accounts",
																":stake_address",
																"addresses",
																"total"
															],
															"variable": [
																{
																	"key": "stake_address"
																}
															]
														}
													},
													"status": "I'm a teapot (RFC 2324)",
													"code": 418,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Usage limit reached",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/accounts/:stake_address/addresses/total",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"accounts",
																":stake_address",
																"addresses",
																"total"
															],
															"variable": [
																{
																	"key": "stake_address"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/accounts/:stake_address/addresses/total",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"accounts",
																":stake_address",
																"addresses",
																"total"
															],
															"variable": [
																{
																	"key": "stake_address"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Account associated addresses",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:stake_address/addresses?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":stake_address",
												"addresses"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											],
											"variable": [
												{
													"key": "stake_address",
													"value": "<string>",
													"description": "(Required) Bech32 stake address."
												}
											]
										},
										"description": "Obtain information about the addresses of a specific account.\n<b>Be careful</b>, as an account could be part of a mangled address and does not necessarily mean the addresses are owned by user as the account.\n"
									},
									"response": [
										{
											"name": "Return the account addresses content",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/addresses?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"addresses"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"address\": \"<string>\"\n  },\n  {\n    \"address\": \"<string>\"\n  }\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/addresses?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"addresses"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/addresses?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"addresses"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/addresses?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"addresses"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/addresses?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"addresses"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/addresses?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"addresses"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/accounts/:stake_address/addresses?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accounts",
														":stake_address",
														"addresses"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "stake_address"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Specific account address",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:stake_address",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":stake_address"
									],
									"variable": [
										{
											"key": "stake_address",
											"value": "<string>",
											"description": "(Required) Bech32 stake address."
										}
									]
								},
								"description": "Obtain information about a specific stake account.\n"
							},
							"response": [
								{
									"name": "Return the account content.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:stake_address",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":stake_address"
											],
											"variable": [
												{
													"key": "stake_address"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"stake_address\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"active_epoch\": \"<integer>\",\n  \"controlled_amount\": \"<string>\",\n  \"rewards_sum\": \"<string>\",\n  \"withdrawals_sum\": \"<string>\",\n  \"reserves_sum\": \"<string>\",\n  \"treasury_sum\": \"<string>\",\n  \"withdrawable_amount\": \"<string>\",\n  \"pool_id\": \"<string>\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:stake_address",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":stake_address"
											],
											"variable": [
												{
													"key": "stake_address"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Authentication secret is missing or invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:stake_address",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":stake_address"
											],
											"variable": [
												{
													"key": "stake_address"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Component not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:stake_address",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":stake_address"
											],
											"variable": [
												{
													"key": "stake_address"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:stake_address",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":stake_address"
											],
											"variable": [
												{
													"key": "stake_address"
												}
											]
										}
									},
									"status": "I'm a teapot (RFC 2324)",
									"code": 418,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Usage limit reached",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:stake_address",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":stake_address"
											],
											"variable": [
												{
													"key": "stake_address"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:stake_address",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":stake_address"
											],
											"variable": [
												{
													"key": "stake_address"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "mempool",
			"item": [
				{
					"name": "{hash}",
					"item": [
						{
							"name": "Specific transaction in the mempool",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/mempool/:hash",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mempool",
										":hash"
									],
									"variable": [
										{
											"key": "hash",
											"value": "<string>",
											"description": "(Required) Hash of the requested transaction"
										}
									]
								},
								"description": "Return content of the requested transaction.\n\n<p>\n  <span class=\"hosted\">Hosted</span> Endpoint only available for hosted variant.\n</p>\n"
							},
							"response": [
								{
									"name": "Return the contents of the transaction.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mempool/:hash",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mempool",
												":hash"
											],
											"variable": [
												{
													"key": "hash"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"tx\": {\n    \"hash\": \"<string>\",\n    \"output_amount\": [\n      {\n        \"unit\": \"<string>\",\n        \"quantity\": \"<string>\"\n      },\n      {\n        \"unit\": \"<string>\",\n        \"quantity\": \"<string>\"\n      }\n    ],\n    \"fees\": \"<string>\",\n    \"deposit\": \"<string>\",\n    \"size\": \"<integer>\",\n    \"invalid_before\": \"<string>\",\n    \"invalid_hereafter\": \"<string>\",\n    \"utxo_count\": \"<integer>\",\n    \"withdrawal_count\": \"<integer>\",\n    \"mir_cert_count\": \"<integer>\",\n    \"delegation_count\": \"<integer>\",\n    \"stake_cert_count\": \"<integer>\",\n    \"pool_update_count\": \"<integer>\",\n    \"pool_retire_count\": \"<integer>\",\n    \"asset_mint_or_burn_count\": \"<integer>\",\n    \"redeemer_count\": \"<integer>\",\n    \"valid_contract\": \"<boolean>\"\n  },\n  \"inputs\": [\n    {\n      \"tx_hash\": \"<string>\",\n      \"output_index\": \"<integer>\",\n      \"collateral\": \"<boolean>\",\n      \"address\": \"<string>\",\n      \"reference\": \"<boolean>\"\n    },\n    {\n      \"tx_hash\": \"<string>\",\n      \"output_index\": \"<integer>\",\n      \"collateral\": \"<boolean>\",\n      \"address\": \"<string>\",\n      \"reference\": \"<boolean>\"\n    }\n  ],\n  \"outputs\": [\n    {\n      \"address\": \"<string>\",\n      \"amount\": [\n        {\n          \"unit\": \"<string>\",\n          \"quantity\": \"<string>\"\n        },\n        {\n          \"unit\": \"<string>\",\n          \"quantity\": \"<string>\"\n        }\n      ],\n      \"output_index\": \"<integer>\",\n      \"data_hash\": \"<string>\",\n      \"inline_datum\": \"<string>\",\n      \"collateral\": \"<boolean>\",\n      \"reference_script_hash\": \"<string>\"\n    },\n    {\n      \"address\": \"<string>\",\n      \"amount\": [\n        {\n          \"unit\": \"<string>\",\n          \"quantity\": \"<string>\"\n        },\n        {\n          \"unit\": \"<string>\",\n          \"quantity\": \"<string>\"\n        }\n      ],\n      \"output_index\": \"<integer>\",\n      \"data_hash\": \"<string>\",\n      \"inline_datum\": \"<string>\",\n      \"collateral\": \"<boolean>\",\n      \"reference_script_hash\": \"<string>\"\n    }\n  ],\n  \"redeemers\": [\n    {\n      \"tx_index\": \"<integer>\",\n      \"purpose\": \"cert\",\n      \"unit_mem\": \"<string>\",\n      \"unit_steps\": \"<string>\"\n    },\n    {\n      \"tx_index\": \"<integer>\",\n      \"purpose\": \"mint\",\n      \"unit_mem\": \"<string>\",\n      \"unit_steps\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mempool/:hash",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mempool",
												":hash"
											],
											"variable": [
												{
													"key": "hash"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Authentication secret is missing or invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mempool/:hash",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mempool",
												":hash"
											],
											"variable": [
												{
													"key": "hash"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Component not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mempool/:hash",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mempool",
												":hash"
											],
											"variable": [
												{
													"key": "hash"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mempool/:hash",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mempool",
												":hash"
											],
											"variable": [
												{
													"key": "hash"
												}
											]
										}
									},
									"status": "I'm a teapot (RFC 2324)",
									"code": 418,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Usage limit reached",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mempool/:hash",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mempool",
												":hash"
											],
											"variable": [
												{
													"key": "hash"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mempool/:hash",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mempool",
												":hash"
											],
											"variable": [
												{
													"key": "hash"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "addresses",
					"item": [
						{
							"name": "{address}",
							"item": [
								{
									"name": "Mempool by address",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mempool/addresses/:address?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mempool",
												"addresses",
												":address"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "Ordered by the time of transaction submission.\nBy default, we return oldest first, newest last.\n"
												}
											],
											"variable": [
												{
													"key": "address",
													"value": "<string>",
													"description": "(Required) Bech32 address."
												}
											]
										},
										"description": "List of mempool transactions where at least one of the transaction inputs or outputs belongs to the address.\nShows only transactions submitted via Blockfrost.io.\n\n<p>\n  <span class=\"hosted\">Hosted</span> Endpoint only available for hosted variant.\n</p>\n"
									},
									"response": [
										{
											"name": "Return the contents of the mempool",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/mempool/addresses/:address?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mempool",
														"addresses",
														":address"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "Ordered by the time of transaction submission.\nBy default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"tx_hash\": \"<string>\"\n  },\n  {\n    \"tx_hash\": \"<string>\"\n  }\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/mempool/addresses/:address?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mempool",
														"addresses",
														":address"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "Ordered by the time of transaction submission.\nBy default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/mempool/addresses/:address?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mempool",
														"addresses",
														":address"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "Ordered by the time of transaction submission.\nBy default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/mempool/addresses/:address?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mempool",
														"addresses",
														":address"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "Ordered by the time of transaction submission.\nBy default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/mempool/addresses/:address?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mempool",
														"addresses",
														":address"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "Ordered by the time of transaction submission.\nBy default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/mempool/addresses/:address?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mempool",
														"addresses",
														":address"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "Ordered by the time of transaction submission.\nBy default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/mempool/addresses/:address?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mempool",
														"addresses",
														":address"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "Ordered by the time of transaction submission.\nBy default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Mempool",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/mempool?count=100&page=1&order=asc",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"mempool"
							],
							"query": [
								{
									"key": "count",
									"value": "100",
									"description": "The number of results displayed on one page."
								},
								{
									"key": "page",
									"value": "1",
									"description": "The page number for listing the results."
								},
								{
									"key": "order",
									"value": "asc",
									"description": "Ordered by the time of transaction submission.\nBy default, we return oldest first, newest last.\n"
								}
							]
						},
						"description": "Return transactions that are currently stored in Blockfrost mempool,\nwaiting to be included in a newly minted block.\nShows only transactions submitted via Blockfrost.io.\n\n<p>\n  <span class=\"hosted\">Hosted</span> Endpoint only available for hosted variant.\n</p>\n"
					},
					"response": [
						{
							"name": "Return the contents of the mempool",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/mempool?count=100&page=1&order=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mempool"
									],
									"query": [
										{
											"key": "count",
											"value": "100",
											"description": "The number of results displayed on one page."
										},
										{
											"key": "page",
											"value": "1",
											"description": "The page number for listing the results."
										},
										{
											"key": "order",
											"value": "asc",
											"description": "Ordered by the time of transaction submission.\nBy default, we return oldest first, newest last.\n"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"tx_hash\": \"<string>\"\n  },\n  {\n    \"tx_hash\": \"<string>\"\n  }\n]"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/mempool?count=100&page=1&order=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mempool"
									],
									"query": [
										{
											"key": "count",
											"value": "100",
											"description": "The number of results displayed on one page."
										},
										{
											"key": "page",
											"value": "1",
											"description": "The page number for listing the results."
										},
										{
											"key": "order",
											"value": "asc",
											"description": "Ordered by the time of transaction submission.\nBy default, we return oldest first, newest last.\n"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "Authentication secret is missing or invalid",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/mempool?count=100&page=1&order=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mempool"
									],
									"query": [
										{
											"key": "count",
											"value": "100",
											"description": "The number of results displayed on one page."
										},
										{
											"key": "page",
											"value": "1",
											"description": "The page number for listing the results."
										},
										{
											"key": "order",
											"value": "asc",
											"description": "Ordered by the time of transaction submission.\nBy default, we return oldest first, newest last.\n"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "Component not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/mempool?count=100&page=1&order=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mempool"
									],
									"query": [
										{
											"key": "count",
											"value": "100",
											"description": "The number of results displayed on one page."
										},
										{
											"key": "page",
											"value": "1",
											"description": "The page number for listing the results."
										},
										{
											"key": "order",
											"value": "asc",
											"description": "Ordered by the time of transaction submission.\nBy default, we return oldest first, newest last.\n"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/mempool?count=100&page=1&order=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mempool"
									],
									"query": [
										{
											"key": "count",
											"value": "100",
											"description": "The number of results displayed on one page."
										},
										{
											"key": "page",
											"value": "1",
											"description": "The page number for listing the results."
										},
										{
											"key": "order",
											"value": "asc",
											"description": "Ordered by the time of transaction submission.\nBy default, we return oldest first, newest last.\n"
										}
									]
								}
							},
							"status": "I'm a teapot (RFC 2324)",
							"code": 418,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "Usage limit reached",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/mempool?count=100&page=1&order=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mempool"
									],
									"query": [
										{
											"key": "count",
											"value": "100",
											"description": "The number of results displayed on one page."
										},
										{
											"key": "page",
											"value": "1",
											"description": "The page number for listing the results."
										},
										{
											"key": "order",
											"value": "asc",
											"description": "Ordered by the time of transaction submission.\nBy default, we return oldest first, newest last.\n"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/mempool?count=100&page=1&order=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mempool"
									],
									"query": [
										{
											"key": "count",
											"value": "100",
											"description": "The number of results displayed on one page."
										},
										{
											"key": "page",
											"value": "1",
											"description": "The page number for listing the results."
										},
										{
											"key": "order",
											"value": "asc",
											"description": "Ordered by the time of transaction submission.\nBy default, we return oldest first, newest last.\n"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "metadata",
			"item": [
				{
					"name": "txs",
					"item": [
						{
							"name": "labels",
							"item": [
								{
									"name": "{label}",
									"item": [
										{
											"name": "cbor",
											"item": [
												{
													"name": "Transaction metadata content in CBOR",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/metadata/txs/labels/:label/cbor?count=100&page=1&order=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"metadata",
																"txs",
																"labels",
																":label",
																"cbor"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																},
																{
																	"key": "order",
																	"value": "asc",
																	"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																}
															],
															"variable": [
																{
																	"key": "label",
																	"value": "<string>",
																	"description": "(Required) Metadata label"
																}
															]
														},
														"description": "Transaction metadata per label."
													},
													"response": [
														{
															"name": "Return the account metadata content in CBOR",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "project_id",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/metadata/txs/labels/:label/cbor?count=100&page=1&order=asc",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"metadata",
																		"txs",
																		"labels",
																		":label",
																		"cbor"
																	],
																	"query": [
																		{
																			"key": "count",
																			"value": "100",
																			"description": "The number of results displayed on one page."
																		},
																		{
																			"key": "page",
																			"value": "1",
																			"description": "The page number for listing the results."
																		},
																		{
																			"key": "order",
																			"value": "asc",
																			"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "label"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"tx_hash\": \"<string>\",\n    \"cbor_metadata\": \"<string>\",\n    \"metadata\": \"<string>\"\n  },\n  {\n    \"tx_hash\": \"<string>\",\n    \"cbor_metadata\": \"<string>\",\n    \"metadata\": \"<string>\"\n  }\n]"
														},
														{
															"name": "Bad request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "project_id",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/metadata/txs/labels/:label/cbor?count=100&page=1&order=asc",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"metadata",
																		"txs",
																		"labels",
																		":label",
																		"cbor"
																	],
																	"query": [
																		{
																			"key": "count",
																			"value": "100",
																			"description": "The number of results displayed on one page."
																		},
																		{
																			"key": "page",
																			"value": "1",
																			"description": "The page number for listing the results."
																		},
																		{
																			"key": "order",
																			"value": "asc",
																			"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "label"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
														},
														{
															"name": "Authentication secret is missing or invalid",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "project_id",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/metadata/txs/labels/:label/cbor?count=100&page=1&order=asc",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"metadata",
																		"txs",
																		"labels",
																		":label",
																		"cbor"
																	],
																	"query": [
																		{
																			"key": "count",
																			"value": "100",
																			"description": "The number of results displayed on one page."
																		},
																		{
																			"key": "page",
																			"value": "1",
																			"description": "The page number for listing the results."
																		},
																		{
																			"key": "order",
																			"value": "asc",
																			"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "label"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
														},
														{
															"name": "Component not found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "project_id",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/metadata/txs/labels/:label/cbor?count=100&page=1&order=asc",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"metadata",
																		"txs",
																		"labels",
																		":label",
																		"cbor"
																	],
																	"query": [
																		{
																			"key": "count",
																			"value": "100",
																			"description": "The number of results displayed on one page."
																		},
																		{
																			"key": "page",
																			"value": "1",
																			"description": "The page number for listing the results."
																		},
																		{
																			"key": "order",
																			"value": "asc",
																			"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "label"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
														},
														{
															"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "project_id",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/metadata/txs/labels/:label/cbor?count=100&page=1&order=asc",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"metadata",
																		"txs",
																		"labels",
																		":label",
																		"cbor"
																	],
																	"query": [
																		{
																			"key": "count",
																			"value": "100",
																			"description": "The number of results displayed on one page."
																		},
																		{
																			"key": "page",
																			"value": "1",
																			"description": "The page number for listing the results."
																		},
																		{
																			"key": "order",
																			"value": "asc",
																			"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "label"
																		}
																	]
																}
															},
															"status": "I'm a teapot (RFC 2324)",
															"code": 418,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
														},
														{
															"name": "Usage limit reached",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "project_id",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/metadata/txs/labels/:label/cbor?count=100&page=1&order=asc",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"metadata",
																		"txs",
																		"labels",
																		":label",
																		"cbor"
																	],
																	"query": [
																		{
																			"key": "count",
																			"value": "100",
																			"description": "The number of results displayed on one page."
																		},
																		{
																			"key": "page",
																			"value": "1",
																			"description": "The page number for listing the results."
																		},
																		{
																			"key": "order",
																			"value": "asc",
																			"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "label"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
														},
														{
															"name": "Internal Server Error",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "project_id",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/metadata/txs/labels/:label/cbor?count=100&page=1&order=asc",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"metadata",
																		"txs",
																		"labels",
																		":label",
																		"cbor"
																	],
																	"query": [
																		{
																			"key": "count",
																			"value": "100",
																			"description": "The number of results displayed on one page."
																		},
																		{
																			"key": "page",
																			"value": "1",
																			"description": "The page number for listing the results."
																		},
																		{
																			"key": "order",
																			"value": "asc",
																			"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "label"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Transaction metadata content in JSON",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/txs/labels/:label?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"txs",
														"labels",
														":label"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "label",
															"value": "<string>",
															"description": "(Required) Metadata label"
														}
													]
												},
												"description": "Transaction metadata per label."
											},
											"response": [
												{
													"name": "Return the account metadata content",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/metadata/txs/labels/:label?count=100&page=1&order=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"metadata",
																"txs",
																"labels",
																":label"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																},
																{
																	"key": "order",
																	"value": "asc",
																	"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																}
															],
															"variable": [
																{
																	"key": "label"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"tx_hash\": \"<string>\",\n    \"json_metadata\": \"<string>\"\n  },\n  {\n    \"tx_hash\": \"<string>\",\n    \"json_metadata\": \"<string>\"\n  }\n]"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/metadata/txs/labels/:label?count=100&page=1&order=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"metadata",
																"txs",
																"labels",
																":label"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																},
																{
																	"key": "order",
																	"value": "asc",
																	"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																}
															],
															"variable": [
																{
																	"key": "label"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Authentication secret is missing or invalid",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/metadata/txs/labels/:label?count=100&page=1&order=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"metadata",
																"txs",
																"labels",
																":label"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																},
																{
																	"key": "order",
																	"value": "asc",
																	"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																}
															],
															"variable": [
																{
																	"key": "label"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Component not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/metadata/txs/labels/:label?count=100&page=1&order=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"metadata",
																"txs",
																"labels",
																":label"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																},
																{
																	"key": "order",
																	"value": "asc",
																	"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																}
															],
															"variable": [
																{
																	"key": "label"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/metadata/txs/labels/:label?count=100&page=1&order=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"metadata",
																"txs",
																"labels",
																":label"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																},
																{
																	"key": "order",
																	"value": "asc",
																	"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																}
															],
															"variable": [
																{
																	"key": "label"
																}
															]
														}
													},
													"status": "I'm a teapot (RFC 2324)",
													"code": 418,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Usage limit reached",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/metadata/txs/labels/:label?count=100&page=1&order=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"metadata",
																"txs",
																"labels",
																":label"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																},
																{
																	"key": "order",
																	"value": "asc",
																	"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																}
															],
															"variable": [
																{
																	"key": "label"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/metadata/txs/labels/:label?count=100&page=1&order=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"metadata",
																"txs",
																"labels",
																":label"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																},
																{
																	"key": "order",
																	"value": "asc",
																	"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																}
															],
															"variable": [
																{
																	"key": "label"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Transaction metadata labels",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/txs/labels?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"txs",
												"labels"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											]
										},
										"description": "List of all used transaction metadata labels.\n"
									},
									"response": [
										{
											"name": "Return the account metadata content in CBOR",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/txs/labels?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"txs",
														"labels"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"label\": \"<string>\",\n    \"cip10\": \"<string>\",\n    \"count\": \"<string>\"\n  },\n  {\n    \"label\": \"<string>\",\n    \"cip10\": \"<string>\",\n    \"count\": \"<string>\"\n  }\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/txs/labels?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"txs",
														"labels"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/txs/labels?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"txs",
														"labels"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/txs/labels?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"txs",
														"labels"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/txs/labels?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"txs",
														"labels"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/txs/labels?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"txs",
														"labels"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/txs/labels?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"txs",
														"labels"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "addresses",
			"item": [
				{
					"name": "{address}",
					"item": [
						{
							"name": "extended",
							"item": [
								{
									"name": "Extended information of a specific address",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/addresses/:address/extended",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"addresses",
												":address",
												"extended"
											],
											"variable": [
												{
													"key": "address",
													"value": "<string>",
													"description": "(Required) Bech32 address."
												}
											]
										},
										"description": "Obtain extended information about a specific address.\n"
									},
									"response": [
										{
											"name": "Return the address content.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/addresses/:address/extended",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"addresses",
														":address",
														"extended"
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"address\": \"<string>\",\n  \"amount\": [\n    {\n      \"unit\": \"<string>\",\n      \"quantity\": \"<string>\",\n      \"decimals\": \"<integer>\",\n      \"has_nft_onchain_metadata\": \"<boolean>\"\n    },\n    {\n      \"unit\": \"<string>\",\n      \"quantity\": \"<string>\",\n      \"decimals\": \"<integer>\",\n      \"has_nft_onchain_metadata\": \"<boolean>\"\n    }\n  ],\n  \"stake_address\": \"<string>\",\n  \"type\": \"byron\",\n  \"script\": \"<boolean>\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/addresses/:address/extended",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"addresses",
														":address",
														"extended"
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/addresses/:address/extended",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"addresses",
														":address",
														"extended"
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/addresses/:address/extended",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"addresses",
														":address",
														"extended"
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/addresses/:address/extended",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"addresses",
														":address",
														"extended"
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/addresses/:address/extended",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"addresses",
														":address",
														"extended"
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/addresses/:address/extended",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"addresses",
														":address",
														"extended"
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "total",
							"item": [
								{
									"name": "Address details",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/addresses/:address/total",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"addresses",
												":address",
												"total"
											],
											"variable": [
												{
													"key": "address",
													"value": "<string>",
													"description": "(Required) Bech32 address."
												}
											]
										},
										"description": "Obtain details about an address."
									},
									"response": [
										{
											"name": "Return the Address details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/addresses/:address/total",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"addresses",
														":address",
														"total"
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"address\": \"<string>\",\n  \"received_sum\": [\n    {\n      \"unit\": \"<string>\",\n      \"quantity\": \"<string>\"\n    },\n    {\n      \"unit\": \"<string>\",\n      \"quantity\": \"<string>\"\n    }\n  ],\n  \"sent_sum\": [\n    {\n      \"unit\": \"<string>\",\n      \"quantity\": \"<string>\"\n    },\n    {\n      \"unit\": \"<string>\",\n      \"quantity\": \"<string>\"\n    }\n  ],\n  \"tx_count\": \"<integer>\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/addresses/:address/total",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"addresses",
														":address",
														"total"
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/addresses/:address/total",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"addresses",
														":address",
														"total"
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/addresses/:address/total",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"addresses",
														":address",
														"total"
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/addresses/:address/total",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"addresses",
														":address",
														"total"
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/addresses/:address/total",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"addresses",
														":address",
														"total"
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/addresses/:address/total",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"addresses",
														":address",
														"total"
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "utxos",
							"item": [
								{
									"name": "{asset}",
									"item": [
										{
											"name": "Address UTXOs of a given asset",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/addresses/:address/utxos/:asset?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"addresses",
														":address",
														"utxos",
														":asset"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "address",
															"value": "<string>",
															"description": "(Required) Bech32 address."
														},
														{
															"key": "asset",
															"value": "<string>",
															"description": "(Required) Concatenation of the policy_id and hex-encoded asset_name"
														}
													]
												},
												"description": "UTXOs of the address."
											},
											"response": [
												{
													"name": "Return the address content",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/addresses/:address/utxos/:asset?count=100&page=1&order=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"addresses",
																":address",
																"utxos",
																":asset"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																},
																{
																	"key": "order",
																	"value": "asc",
																	"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																}
															],
															"variable": [
																{
																	"key": "address"
																},
																{
																	"key": "asset"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"address\": \"<string>\",\n    \"tx_hash\": \"<string>\",\n    \"tx_index\": \"<integer>\",\n    \"output_index\": \"<integer>\",\n    \"amount\": [\n      {\n        \"unit\": \"<string>\",\n        \"quantity\": \"<string>\"\n      },\n      {\n        \"unit\": \"<string>\",\n        \"quantity\": \"<string>\"\n      }\n    ],\n    \"block\": \"<string>\",\n    \"data_hash\": \"<string>\",\n    \"inline_datum\": \"<string>\",\n    \"reference_script_hash\": \"<string>\"\n  },\n  {\n    \"address\": \"<string>\",\n    \"tx_hash\": \"<string>\",\n    \"tx_index\": \"<integer>\",\n    \"output_index\": \"<integer>\",\n    \"amount\": [\n      {\n        \"unit\": \"<string>\",\n        \"quantity\": \"<string>\"\n      },\n      {\n        \"unit\": \"<string>\",\n        \"quantity\": \"<string>\"\n      }\n    ],\n    \"block\": \"<string>\",\n    \"data_hash\": \"<string>\",\n    \"inline_datum\": \"<string>\",\n    \"reference_script_hash\": \"<string>\"\n  }\n]"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/addresses/:address/utxos/:asset?count=100&page=1&order=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"addresses",
																":address",
																"utxos",
																":asset"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																},
																{
																	"key": "order",
																	"value": "asc",
																	"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																}
															],
															"variable": [
																{
																	"key": "address"
																},
																{
																	"key": "asset"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Authentication secret is missing or invalid",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/addresses/:address/utxos/:asset?count=100&page=1&order=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"addresses",
																":address",
																"utxos",
																":asset"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																},
																{
																	"key": "order",
																	"value": "asc",
																	"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																}
															],
															"variable": [
																{
																	"key": "address"
																},
																{
																	"key": "asset"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Component not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/addresses/:address/utxos/:asset?count=100&page=1&order=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"addresses",
																":address",
																"utxos",
																":asset"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																},
																{
																	"key": "order",
																	"value": "asc",
																	"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																}
															],
															"variable": [
																{
																	"key": "address"
																},
																{
																	"key": "asset"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/addresses/:address/utxos/:asset?count=100&page=1&order=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"addresses",
																":address",
																"utxos",
																":asset"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																},
																{
																	"key": "order",
																	"value": "asc",
																	"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																}
															],
															"variable": [
																{
																	"key": "address"
																},
																{
																	"key": "asset"
																}
															]
														}
													},
													"status": "I'm a teapot (RFC 2324)",
													"code": 418,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Usage limit reached",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/addresses/:address/utxos/:asset?count=100&page=1&order=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"addresses",
																":address",
																"utxos",
																":asset"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																},
																{
																	"key": "order",
																	"value": "asc",
																	"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																}
															],
															"variable": [
																{
																	"key": "address"
																},
																{
																	"key": "asset"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/addresses/:address/utxos/:asset?count=100&page=1&order=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"addresses",
																":address",
																"utxos",
																":asset"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																},
																{
																	"key": "order",
																	"value": "asc",
																	"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																}
															],
															"variable": [
																{
																	"key": "address"
																},
																{
																	"key": "asset"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Address UTXOs",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/addresses/:address/utxos?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"addresses",
												":address",
												"utxos"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											],
											"variable": [
												{
													"key": "address",
													"value": "<string>",
													"description": "(Required) Bech32 address."
												}
											]
										},
										"description": "UTXOs of the address."
									},
									"response": [
										{
											"name": "Return the address content",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/addresses/:address/utxos?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"addresses",
														":address",
														"utxos"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"address\": \"<string>\",\n    \"tx_hash\": \"<string>\",\n    \"tx_index\": \"<integer>\",\n    \"output_index\": \"<integer>\",\n    \"amount\": [\n      {\n        \"unit\": \"<string>\",\n        \"quantity\": \"<string>\"\n      },\n      {\n        \"unit\": \"<string>\",\n        \"quantity\": \"<string>\"\n      }\n    ],\n    \"block\": \"<string>\",\n    \"data_hash\": \"<string>\",\n    \"inline_datum\": \"<string>\",\n    \"reference_script_hash\": \"<string>\"\n  },\n  {\n    \"address\": \"<string>\",\n    \"tx_hash\": \"<string>\",\n    \"tx_index\": \"<integer>\",\n    \"output_index\": \"<integer>\",\n    \"amount\": [\n      {\n        \"unit\": \"<string>\",\n        \"quantity\": \"<string>\"\n      },\n      {\n        \"unit\": \"<string>\",\n        \"quantity\": \"<string>\"\n      }\n    ],\n    \"block\": \"<string>\",\n    \"data_hash\": \"<string>\",\n    \"inline_datum\": \"<string>\",\n    \"reference_script_hash\": \"<string>\"\n  }\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/addresses/:address/utxos?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"addresses",
														":address",
														"utxos"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/addresses/:address/utxos?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"addresses",
														":address",
														"utxos"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/addresses/:address/utxos?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"addresses",
														":address",
														"utxos"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/addresses/:address/utxos?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"addresses",
														":address",
														"utxos"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/addresses/:address/utxos?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"addresses",
														":address",
														"utxos"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/addresses/:address/utxos?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"addresses",
														":address",
														"utxos"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "txs",
							"item": [
								{
									"name": "Address txs",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/addresses/:address/txs?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"addresses",
												":address",
												"txs"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of transactions per page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											],
											"variable": [
												{
													"key": "address",
													"value": "<string>",
													"description": "(Required) Bech32 address."
												}
											]
										},
										"description": "Transactions on the address."
									},
									"response": [
										{
											"name": "Return the address content",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/addresses/:address/txs?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"addresses",
														":address",
														"txs"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of transactions per page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  \"<string>\",\n  \"<string>\"\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/addresses/:address/txs?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"addresses",
														":address",
														"txs"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of transactions per page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/addresses/:address/txs?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"addresses",
														":address",
														"txs"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of transactions per page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/addresses/:address/txs?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"addresses",
														":address",
														"txs"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of transactions per page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/addresses/:address/txs?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"addresses",
														":address",
														"txs"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of transactions per page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/addresses/:address/txs?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"addresses",
														":address",
														"txs"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of transactions per page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/addresses/:address/txs?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"addresses",
														":address",
														"txs"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of transactions per page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "transactions",
							"item": [
								{
									"name": "Address transactions",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/addresses/:address/transactions?count=100&page=1&order=asc&from=<string>&to=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"addresses",
												":address",
												"transactions"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of addresses per page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												},
												{
													"key": "from",
													"value": "<string>",
													"description": "The block number and optionally also index from which (inclusive) to start search for results, concatenated using colon.\nHas to be lower than or equal to `to` parameter.\n"
												},
												{
													"key": "to",
													"value": "<string>",
													"description": "The block number and optionally also index where (inclusive) to end the search for results, concatenated using colon.\nHas to be higher than or equal to `from` parameter.\n"
												}
											],
											"variable": [
												{
													"key": "address",
													"value": "<string>",
													"description": "(Required) Bech32 address."
												}
											]
										},
										"description": "Transactions on the address."
									},
									"response": [
										{
											"name": "Return the address content",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/addresses/:address/transactions?count=100&page=1&order=asc&from=<string>&to=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"addresses",
														":address",
														"transactions"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of addresses per page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														},
														{
															"key": "from",
															"value": "<string>",
															"description": "The block number and optionally also index from which (inclusive) to start search for results, concatenated using colon.\nHas to be lower than or equal to `to` parameter.\n"
														},
														{
															"key": "to",
															"value": "<string>",
															"description": "The block number and optionally also index where (inclusive) to end the search for results, concatenated using colon.\nHas to be higher than or equal to `from` parameter.\n"
														}
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"tx_hash\": \"<string>\",\n    \"tx_index\": \"<integer>\",\n    \"block_height\": \"<integer>\",\n    \"block_time\": \"<integer>\"\n  },\n  {\n    \"tx_hash\": \"<string>\",\n    \"tx_index\": \"<integer>\",\n    \"block_height\": \"<integer>\",\n    \"block_time\": \"<integer>\"\n  }\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/addresses/:address/transactions?count=100&page=1&order=asc&from=<string>&to=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"addresses",
														":address",
														"transactions"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of addresses per page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														},
														{
															"key": "from",
															"value": "<string>",
															"description": "The block number and optionally also index from which (inclusive) to start search for results, concatenated using colon.\nHas to be lower than or equal to `to` parameter.\n"
														},
														{
															"key": "to",
															"value": "<string>",
															"description": "The block number and optionally also index where (inclusive) to end the search for results, concatenated using colon.\nHas to be higher than or equal to `from` parameter.\n"
														}
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/addresses/:address/transactions?count=100&page=1&order=asc&from=<string>&to=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"addresses",
														":address",
														"transactions"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of addresses per page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														},
														{
															"key": "from",
															"value": "<string>",
															"description": "The block number and optionally also index from which (inclusive) to start search for results, concatenated using colon.\nHas to be lower than or equal to `to` parameter.\n"
														},
														{
															"key": "to",
															"value": "<string>",
															"description": "The block number and optionally also index where (inclusive) to end the search for results, concatenated using colon.\nHas to be higher than or equal to `from` parameter.\n"
														}
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/addresses/:address/transactions?count=100&page=1&order=asc&from=<string>&to=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"addresses",
														":address",
														"transactions"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of addresses per page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														},
														{
															"key": "from",
															"value": "<string>",
															"description": "The block number and optionally also index from which (inclusive) to start search for results, concatenated using colon.\nHas to be lower than or equal to `to` parameter.\n"
														},
														{
															"key": "to",
															"value": "<string>",
															"description": "The block number and optionally also index where (inclusive) to end the search for results, concatenated using colon.\nHas to be higher than or equal to `from` parameter.\n"
														}
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/addresses/:address/transactions?count=100&page=1&order=asc&from=<string>&to=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"addresses",
														":address",
														"transactions"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of addresses per page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														},
														{
															"key": "from",
															"value": "<string>",
															"description": "The block number and optionally also index from which (inclusive) to start search for results, concatenated using colon.\nHas to be lower than or equal to `to` parameter.\n"
														},
														{
															"key": "to",
															"value": "<string>",
															"description": "The block number and optionally also index where (inclusive) to end the search for results, concatenated using colon.\nHas to be higher than or equal to `from` parameter.\n"
														}
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/addresses/:address/transactions?count=100&page=1&order=asc&from=<string>&to=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"addresses",
														":address",
														"transactions"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of addresses per page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														},
														{
															"key": "from",
															"value": "<string>",
															"description": "The block number and optionally also index from which (inclusive) to start search for results, concatenated using colon.\nHas to be lower than or equal to `to` parameter.\n"
														},
														{
															"key": "to",
															"value": "<string>",
															"description": "The block number and optionally also index where (inclusive) to end the search for results, concatenated using colon.\nHas to be higher than or equal to `from` parameter.\n"
														}
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/addresses/:address/transactions?count=100&page=1&order=asc&from=<string>&to=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"addresses",
														":address",
														"transactions"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of addresses per page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														},
														{
															"key": "from",
															"value": "<string>",
															"description": "The block number and optionally also index from which (inclusive) to start search for results, concatenated using colon.\nHas to be lower than or equal to `to` parameter.\n"
														},
														{
															"key": "to",
															"value": "<string>",
															"description": "The block number and optionally also index where (inclusive) to end the search for results, concatenated using colon.\nHas to be higher than or equal to `from` parameter.\n"
														}
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Specific address",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/addresses/:address",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"addresses",
										":address"
									],
									"variable": [
										{
											"key": "address",
											"value": "<string>",
											"description": "(Required) Bech32 address."
										}
									]
								},
								"description": "Obtain information about a specific address."
							},
							"response": [
								{
									"name": "Return the address content.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/addresses/:address",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"addresses",
												":address"
											],
											"variable": [
												{
													"key": "address"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"address\": \"<string>\",\n  \"amount\": [\n    {\n      \"unit\": \"<string>\",\n      \"quantity\": \"<string>\"\n    },\n    {\n      \"unit\": \"<string>\",\n      \"quantity\": \"<string>\"\n    }\n  ],\n  \"stake_address\": \"<string>\",\n  \"type\": \"byron\",\n  \"script\": \"<boolean>\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/addresses/:address",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"addresses",
												":address"
											],
											"variable": [
												{
													"key": "address"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Authentication secret is missing or invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/addresses/:address",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"addresses",
												":address"
											],
											"variable": [
												{
													"key": "address"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Component not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/addresses/:address",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"addresses",
												":address"
											],
											"variable": [
												{
													"key": "address"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/addresses/:address",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"addresses",
												":address"
											],
											"variable": [
												{
													"key": "address"
												}
											]
										}
									},
									"status": "I'm a teapot (RFC 2324)",
									"code": 418,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Usage limit reached",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/addresses/:address",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"addresses",
												":address"
											],
											"variable": [
												{
													"key": "address"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/addresses/:address",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"addresses",
												":address"
											],
											"variable": [
												{
													"key": "address"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "pools",
			"item": [
				{
					"name": "extended",
					"item": [
						{
							"name": "List of stake pools with additional information",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pools/extended?count=100&page=1&order=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pools",
										"extended"
									],
									"query": [
										{
											"key": "count",
											"value": "100",
											"description": "The number of pools per page."
										},
										{
											"key": "page",
											"value": "1",
											"description": "The page number for listing the results."
										},
										{
											"key": "order",
											"value": "asc",
											"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
										}
									]
								},
								"description": "List of registered stake pools with additional information."
							},
							"response": [
								{
									"name": "Return the list of pools.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pools/extended?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pools",
												"extended"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of pools per page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"pool_id\": \"<string>\",\n    \"hex\": \"<string>\",\n    \"active_stake\": \"<string>\",\n    \"live_stake\": \"<string>\"\n  },\n  {\n    \"pool_id\": \"<string>\",\n    \"hex\": \"<string>\",\n    \"active_stake\": \"<string>\",\n    \"live_stake\": \"<string>\"\n  }\n]"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pools/extended?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pools",
												"extended"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of pools per page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Authentication secret is missing or invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pools/extended?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pools",
												"extended"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of pools per page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Component not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pools/extended?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pools",
												"extended"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of pools per page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pools/extended?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pools",
												"extended"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of pools per page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											]
										}
									},
									"status": "I'm a teapot (RFC 2324)",
									"code": 418,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Usage limit reached",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pools/extended?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pools",
												"extended"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of pools per page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pools/extended?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pools",
												"extended"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of pools per page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "retired",
					"item": [
						{
							"name": "List of retired stake pools",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pools/retired?count=100&page=1&order=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pools",
										"retired"
									],
									"query": [
										{
											"key": "count",
											"value": "100",
											"description": "The number of pools per page."
										},
										{
											"key": "page",
											"value": "1",
											"description": "The page number for listing the results."
										},
										{
											"key": "order",
											"value": "asc",
											"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
										}
									]
								},
								"description": "List of already retired pools."
							},
							"response": [
								{
									"name": "Return the pool information content",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pools/retired?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pools",
												"retired"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of pools per page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"pool_id\": \"<string>\",\n    \"epoch\": \"<integer>\"\n  },\n  {\n    \"pool_id\": \"<string>\",\n    \"epoch\": \"<integer>\"\n  }\n]"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pools/retired?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pools",
												"retired"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of pools per page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Authentication secret is missing or invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pools/retired?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pools",
												"retired"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of pools per page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Component not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pools/retired?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pools",
												"retired"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of pools per page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pools/retired?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pools",
												"retired"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of pools per page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											]
										}
									},
									"status": "I'm a teapot (RFC 2324)",
									"code": 418,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Usage limit reached",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pools/retired?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pools",
												"retired"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of pools per page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pools/retired?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pools",
												"retired"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of pools per page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "retiring",
					"item": [
						{
							"name": "List of retiring stake pools",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pools/retiring?count=100&page=1&order=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pools",
										"retiring"
									],
									"query": [
										{
											"key": "count",
											"value": "100",
											"description": "The number of results displayed on one page."
										},
										{
											"key": "page",
											"value": "1",
											"description": "The page number for listing the results."
										},
										{
											"key": "order",
											"value": "asc",
											"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
										}
									]
								},
								"description": "List of stake pools retiring in the upcoming epochs"
							},
							"response": [
								{
									"name": "Return the pool information content",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pools/retiring?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pools",
												"retiring"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"pool_id\": \"<string>\",\n    \"epoch\": \"<integer>\"\n  },\n  {\n    \"pool_id\": \"<string>\",\n    \"epoch\": \"<integer>\"\n  }\n]"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pools/retiring?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pools",
												"retiring"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Authentication secret is missing or invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pools/retiring?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pools",
												"retiring"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Component not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pools/retiring?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pools",
												"retiring"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pools/retiring?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pools",
												"retiring"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											]
										}
									},
									"status": "I'm a teapot (RFC 2324)",
									"code": 418,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Usage limit reached",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pools/retiring?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pools",
												"retiring"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pools/retiring?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pools",
												"retiring"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "{pool_id}",
					"item": [
						{
							"name": "history",
							"item": [
								{
									"name": "Stake pool history",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pools/:pool_id/history?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pools",
												":pool_id",
												"history"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results"
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											],
											"variable": [
												{
													"key": "pool_id",
													"value": "<string>",
													"description": "(Required) Bech32 or hexadecimal pool ID."
												}
											]
										},
										"description": "History of stake pool parameters over epochs.\n"
									},
									"response": [
										{
											"name": "Return the pool information content.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/history?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"history"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results"
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"epoch\": \"<integer>\",\n    \"blocks\": \"<integer>\",\n    \"active_stake\": \"<string>\",\n    \"active_size\": \"<number>\",\n    \"delegators_count\": \"<integer>\",\n    \"rewards\": \"<string>\",\n    \"fees\": \"<string>\"\n  },\n  {\n    \"epoch\": \"<integer>\",\n    \"blocks\": \"<integer>\",\n    \"active_stake\": \"<string>\",\n    \"active_size\": \"<number>\",\n    \"delegators_count\": \"<integer>\",\n    \"rewards\": \"<string>\",\n    \"fees\": \"<string>\"\n  }\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/history?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"history"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results"
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/history?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"history"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results"
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/history?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"history"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results"
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/history?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"history"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results"
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/history?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"history"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results"
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/history?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"history"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results"
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "metadata",
							"item": [
								{
									"name": "Stake pool metadata",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pools/:pool_id/metadata",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pools",
												":pool_id",
												"metadata"
											],
											"variable": [
												{
													"key": "pool_id",
													"value": "<string>",
													"description": "(Required) Bech32 or hexadecimal pool ID."
												}
											]
										},
										"description": "Stake pool registration metadata.\n"
									},
									"response": [
										{
											"name": "Return the pool metadata content.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"metadata"
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"pool_id\": \"<string>\",\n  \"hex\": \"<string>\",\n  \"url\": \"<string>\",\n  \"hash\": \"<string>\",\n  \"ticker\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"homepage\": \"<string>\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"metadata"
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"metadata"
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"metadata"
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"metadata"
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"metadata"
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"metadata"
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "relays",
							"item": [
								{
									"name": "Stake pool relays",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pools/:pool_id/relays",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pools",
												":pool_id",
												"relays"
											],
											"variable": [
												{
													"key": "pool_id",
													"value": "<string>",
													"description": "(Required) Bech32 or hexadecimal pool ID."
												}
											]
										},
										"description": "Relays of a stake pool."
									},
									"response": [
										{
											"name": "Return the pool relays information content.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/relays",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"relays"
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"ipv4\": \"<string>\",\n    \"ipv6\": \"<string>\",\n    \"dns\": \"<string>\",\n    \"dns_srv\": \"<string>\",\n    \"port\": \"<integer>\"\n  },\n  {\n    \"ipv4\": \"<string>\",\n    \"ipv6\": \"<string>\",\n    \"dns\": \"<string>\",\n    \"dns_srv\": \"<string>\",\n    \"port\": \"<integer>\"\n  }\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/relays",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"relays"
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/relays",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"relays"
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/relays",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"relays"
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/relays",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"relays"
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/relays",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"relays"
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/relays",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"relays"
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "delegators",
							"item": [
								{
									"name": "Stake pool delegators",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pools/:pool_id/delegators?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pools",
												":pool_id",
												"delegators"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											],
											"variable": [
												{
													"key": "pool_id",
													"value": "<string>",
													"description": "(Required) Bech32 or hexadecimal pool ID."
												}
											]
										},
										"description": "List of current stake pools delegators."
									},
									"response": [
										{
											"name": "Return the pool delegations.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/delegators?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"delegators"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"address\": \"<string>\",\n    \"live_stake\": \"<string>\"\n  },\n  {\n    \"address\": \"<string>\",\n    \"live_stake\": \"<string>\"\n  }\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/delegators?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"delegators"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/delegators?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"delegators"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/delegators?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"delegators"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/delegators?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"delegators"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/delegators?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"delegators"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/delegators?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"delegators"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "blocks",
							"item": [
								{
									"name": "Stake pool blocks",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pools/:pool_id/blocks?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pools",
												":pool_id",
												"blocks"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											],
											"variable": [
												{
													"key": "pool_id",
													"value": "<string>",
													"description": "(Required) Bech32 or hexadecimal pool ID."
												}
											]
										},
										"description": "List of stake pools blocks."
									},
									"response": [
										{
											"name": "Return the pool block list",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/blocks?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"blocks"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  \"<string>\",\n  \"<string>\"\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/blocks?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"blocks"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/blocks?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"blocks"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/blocks?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"blocks"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/blocks?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"blocks"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/blocks?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"blocks"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/blocks?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"blocks"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "updates",
							"item": [
								{
									"name": "Stake pool updates",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pools/:pool_id/updates?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pools",
												":pool_id",
												"updates"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											],
											"variable": [
												{
													"key": "pool_id",
													"value": "<string>",
													"description": "(Required) Bech32 or hexadecimal pool ID."
												}
											]
										},
										"description": "List of certificate updates to the stake pool."
									},
									"response": [
										{
											"name": "Return the pool updates history",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/updates?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"updates"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"tx_hash\": \"<string>\",\n    \"cert_index\": \"<integer>\",\n    \"action\": \"registered\"\n  },\n  {\n    \"tx_hash\": \"<string>\",\n    \"cert_index\": \"<integer>\",\n    \"action\": \"deregistered\"\n  }\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/updates?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"updates"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/updates?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"updates"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/updates?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"updates"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/updates?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"updates"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/updates?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"updates"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pools/:pool_id/updates?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pools",
														":pool_id",
														"updates"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "pool_id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Specific stake pool",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pools/:pool_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pools",
										":pool_id"
									],
									"variable": [
										{
											"key": "pool_id",
											"value": "<string>",
											"description": "(Required) Bech32 or hexadecimal pool ID."
										}
									]
								},
								"description": "Pool information."
							},
							"response": [
								{
									"name": "Return the pool information content",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pools/:pool_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pools",
												":pool_id"
											],
											"variable": [
												{
													"key": "pool_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"pool_id\": \"<string>\",\n  \"hex\": \"<string>\",\n  \"vrf_key\": \"<string>\",\n  \"blocks_minted\": \"<integer>\",\n  \"blocks_epoch\": \"<integer>\",\n  \"live_stake\": \"<string>\",\n  \"live_size\": \"<number>\",\n  \"live_saturation\": \"<number>\",\n  \"live_delegators\": \"<number>\",\n  \"active_stake\": \"<string>\",\n  \"active_size\": \"<number>\",\n  \"declared_pledge\": \"<string>\",\n  \"live_pledge\": \"<string>\",\n  \"margin_cost\": \"<number>\",\n  \"fixed_cost\": \"<string>\",\n  \"reward_account\": \"<string>\",\n  \"owners\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"registration\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"retirement\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pools/:pool_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pools",
												":pool_id"
											],
											"variable": [
												{
													"key": "pool_id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Authentication secret is missing or invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pools/:pool_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pools",
												":pool_id"
											],
											"variable": [
												{
													"key": "pool_id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Component not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pools/:pool_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pools",
												":pool_id"
											],
											"variable": [
												{
													"key": "pool_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pools/:pool_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pools",
												":pool_id"
											],
											"variable": [
												{
													"key": "pool_id"
												}
											]
										}
									},
									"status": "I'm a teapot (RFC 2324)",
									"code": 418,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Usage limit reached",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pools/:pool_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pools",
												":pool_id"
											],
											"variable": [
												{
													"key": "pool_id"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pools/:pool_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pools",
												":pool_id"
											],
											"variable": [
												{
													"key": "pool_id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "List of stake pools",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pools?count=100&page=1&order=asc",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pools"
							],
							"query": [
								{
									"key": "count",
									"value": "100",
									"description": "The number of pools per page."
								},
								{
									"key": "page",
									"value": "1",
									"description": "The page number for listing the results."
								},
								{
									"key": "order",
									"value": "asc",
									"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
								}
							]
						},
						"description": "List of registered stake pools."
					},
					"response": [
						{
							"name": "Return the list of pools.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pools?count=100&page=1&order=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pools"
									],
									"query": [
										{
											"key": "count",
											"value": "100",
											"description": "The number of pools per page."
										},
										{
											"key": "page",
											"value": "1",
											"description": "The page number for listing the results."
										},
										{
											"key": "order",
											"value": "asc",
											"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  \"<string>\",\n  \"<string>\"\n]"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pools?count=100&page=1&order=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pools"
									],
									"query": [
										{
											"key": "count",
											"value": "100",
											"description": "The number of pools per page."
										},
										{
											"key": "page",
											"value": "1",
											"description": "The page number for listing the results."
										},
										{
											"key": "order",
											"value": "asc",
											"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "Authentication secret is missing or invalid",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pools?count=100&page=1&order=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pools"
									],
									"query": [
										{
											"key": "count",
											"value": "100",
											"description": "The number of pools per page."
										},
										{
											"key": "page",
											"value": "1",
											"description": "The page number for listing the results."
										},
										{
											"key": "order",
											"value": "asc",
											"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "Component not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pools?count=100&page=1&order=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pools"
									],
									"query": [
										{
											"key": "count",
											"value": "100",
											"description": "The number of pools per page."
										},
										{
											"key": "page",
											"value": "1",
											"description": "The page number for listing the results."
										},
										{
											"key": "order",
											"value": "asc",
											"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pools?count=100&page=1&order=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pools"
									],
									"query": [
										{
											"key": "count",
											"value": "100",
											"description": "The number of pools per page."
										},
										{
											"key": "page",
											"value": "1",
											"description": "The page number for listing the results."
										},
										{
											"key": "order",
											"value": "asc",
											"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
										}
									]
								}
							},
							"status": "I'm a teapot (RFC 2324)",
							"code": 418,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "Usage limit reached",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pools?count=100&page=1&order=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pools"
									],
									"query": [
										{
											"key": "count",
											"value": "100",
											"description": "The number of pools per page."
										},
										{
											"key": "page",
											"value": "1",
											"description": "The page number for listing the results."
										},
										{
											"key": "order",
											"value": "asc",
											"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pools?count=100&page=1&order=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pools"
									],
									"query": [
										{
											"key": "count",
											"value": "100",
											"description": "The number of pools per page."
										},
										{
											"key": "page",
											"value": "1",
											"description": "The page number for listing the results."
										},
										{
											"key": "order",
											"value": "asc",
											"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "assets",
			"item": [
				{
					"name": "{asset}",
					"item": [
						{
							"name": "history",
							"item": [
								{
									"name": "Asset history",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assets/:asset/history?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":asset",
												"history"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											],
											"variable": [
												{
													"key": "asset",
													"value": "<string>",
													"description": "(Required) Concatenation of the policy_id and hex-encoded asset_name"
												}
											]
										},
										"description": "History of a specific asset"
									},
									"response": [
										{
											"name": "Return the information about the history of a specific asset",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:asset/history?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":asset",
														"history"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "asset"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"tx_hash\": \"<string>\",\n    \"action\": \"minted\",\n    \"amount\": \"<string>\"\n  },\n  {\n    \"tx_hash\": \"<string>\",\n    \"action\": \"burned\",\n    \"amount\": \"<string>\"\n  }\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:asset/history?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":asset",
														"history"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "asset"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:asset/history?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":asset",
														"history"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "asset"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:asset/history?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":asset",
														"history"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "asset"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:asset/history?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":asset",
														"history"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "asset"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:asset/history?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":asset",
														"history"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "asset"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:asset/history?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":asset",
														"history"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "asset"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "txs",
							"item": [
								{
									"name": "Asset txs",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assets/:asset/txs?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":asset",
												"txs"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											],
											"variable": [
												{
													"key": "asset",
													"value": "<string>",
													"description": "(Required) Concatenation of the policy_id and hex-encoded asset_name"
												}
											]
										},
										"description": "List of a specific asset transactions"
									},
									"response": [
										{
											"name": "Return the information about the history of a specific asset",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:asset/txs?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":asset",
														"txs"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "asset"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  \"<string>\",\n  \"<string>\"\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:asset/txs?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":asset",
														"txs"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "asset"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:asset/txs?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":asset",
														"txs"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "asset"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:asset/txs?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":asset",
														"txs"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "asset"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:asset/txs?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":asset",
														"txs"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "asset"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:asset/txs?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":asset",
														"txs"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "asset"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:asset/txs?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":asset",
														"txs"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "asset"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "transactions",
							"item": [
								{
									"name": "Asset transactions",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assets/:asset/transactions?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":asset",
												"transactions"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											],
											"variable": [
												{
													"key": "asset",
													"value": "<string>",
													"description": "(Required) Concatenation of the policy_id and hex-encoded asset_name"
												}
											]
										},
										"description": "List of a specific asset transactions"
									},
									"response": [
										{
											"name": "Return the information about the history of a specific asset",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:asset/transactions?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":asset",
														"transactions"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "asset"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"tx_hash\": \"<string>\",\n    \"tx_index\": \"<integer>\",\n    \"block_height\": \"<integer>\",\n    \"block_time\": \"<integer>\"\n  },\n  {\n    \"tx_hash\": \"<string>\",\n    \"tx_index\": \"<integer>\",\n    \"block_height\": \"<integer>\",\n    \"block_time\": \"<integer>\"\n  }\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:asset/transactions?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":asset",
														"transactions"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "asset"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:asset/transactions?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":asset",
														"transactions"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "asset"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:asset/transactions?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":asset",
														"transactions"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "asset"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:asset/transactions?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":asset",
														"transactions"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "asset"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:asset/transactions?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":asset",
														"transactions"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "asset"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:asset/transactions?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":asset",
														"transactions"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "asset"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "addresses",
							"item": [
								{
									"name": "Asset addresses",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assets/:asset/addresses?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":asset",
												"addresses"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											],
											"variable": [
												{
													"key": "asset",
													"value": "<string>",
													"description": "(Required) Concatenation of the policy_id and hex-encoded asset_name"
												}
											]
										},
										"description": "List of a addresses containing a specific asset"
									},
									"response": [
										{
											"name": "Return the information about the history of a specific asset",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:asset/addresses?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":asset",
														"addresses"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "asset"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"address\": \"<string>\",\n    \"quantity\": \"<string>\"\n  },\n  {\n    \"address\": \"<string>\",\n    \"quantity\": \"<string>\"\n  }\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:asset/addresses?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":asset",
														"addresses"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "asset"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:asset/addresses?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":asset",
														"addresses"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "asset"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:asset/addresses?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":asset",
														"addresses"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "asset"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:asset/addresses?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":asset",
														"addresses"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "asset"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:asset/addresses?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":asset",
														"addresses"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "asset"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:asset/addresses?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":asset",
														"addresses"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "asset"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Specific asset",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assets/:asset",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assets",
										":asset"
									],
									"variable": [
										{
											"key": "asset",
											"value": "<string>",
											"description": "(Required) Concatenation of the policy_id and hex-encoded asset_name"
										}
									]
								},
								"description": "Information about a specific asset"
							},
							"response": [
								{
									"name": "Return the information about a specific asset",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assets/:asset",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":asset"
											],
											"variable": [
												{
													"key": "asset"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"asset\": \"<string>\",\n  \"policy_id\": \"<string>\",\n  \"asset_name\": \"<string>\",\n  \"fingerprint\": \"<string>\",\n  \"quantity\": \"<string>\",\n  \"initial_mint_tx_hash\": \"<string>\",\n  \"mint_or_burn_count\": \"<integer>\",\n  \"metadata\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"ticker\": \"<string>\",\n    \"url\": \"<string>\",\n    \"logo\": \"<string>\",\n    \"decimals\": \"<integer>\"\n  },\n  \"onchain_metadata\": {\n    \"ea_a\": -5436837\n  },\n  \"onchain_metadata_standard\": \"CIP25v2\",\n  \"onchain_metadata_extra\": \"<string>\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assets/:asset",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":asset"
											],
											"variable": [
												{
													"key": "asset"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Authentication secret is missing or invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assets/:asset",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":asset"
											],
											"variable": [
												{
													"key": "asset"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Component not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assets/:asset",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":asset"
											],
											"variable": [
												{
													"key": "asset"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assets/:asset",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":asset"
											],
											"variable": [
												{
													"key": "asset"
												}
											]
										}
									},
									"status": "I'm a teapot (RFC 2324)",
									"code": 418,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Usage limit reached",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assets/:asset",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":asset"
											],
											"variable": [
												{
													"key": "asset"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assets/:asset",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":asset"
											],
											"variable": [
												{
													"key": "asset"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "policy",
					"item": [
						{
							"name": "{policy_id}",
							"item": [
								{
									"name": "Assets of a specific policy",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "preprod15FQAa3zauTfVwRuRNC2a0Z7Ho4rwigF"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assets/policy/5e336227e31fd1d6e30b5882a4d447d3c86d2dbe7dd22f0a4f0f10a2?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												"policy",
												"5e336227e31fd1d6e30b5882a4d447d3c86d2dbe7dd22f0a4f0f10a2"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											]
										},
										"description": "List of asset minted under a specific policy"
									},
									"response": [
										{
											"name": "Return the information about a specific asset",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/policy/:policy_id?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														"policy",
														":policy_id"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "policy_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"asset\": \"<string>\",\n    \"quantity\": \"<string>\"\n  },\n  {\n    \"asset\": \"<string>\",\n    \"quantity\": \"<string>\"\n  }\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/policy/:policy_id?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														"policy",
														":policy_id"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "policy_id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/policy/:policy_id?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														"policy",
														":policy_id"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "policy_id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/policy/:policy_id?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														"policy",
														":policy_id"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "policy_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/policy/:policy_id?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														"policy",
														":policy_id"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "policy_id"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/policy/:policy_id?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														"policy",
														":policy_id"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "policy_id"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/policy/:policy_id?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														"policy",
														":policy_id"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "policy_id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Assets",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/assets?count=100&page=1&order=asc",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assets"
							],
							"query": [
								{
									"key": "count",
									"value": "100",
									"description": "The number of results displayed on one page."
								},
								{
									"key": "page",
									"value": "1",
									"description": "The page number for listing the results."
								},
								{
									"key": "order",
									"value": "asc",
									"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\nOrdering in this case is based on the time of the first mint transaction.\n"
								}
							]
						},
						"description": "List of assets. If an asset is completely burned,\nit will stay on the list with quantity 0 (order of assets is immutable).\n"
					},
					"response": [
						{
							"name": "Return list of assets",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assets?count=100&page=1&order=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assets"
									],
									"query": [
										{
											"key": "count",
											"value": "100",
											"description": "The number of results displayed on one page."
										},
										{
											"key": "page",
											"value": "1",
											"description": "The page number for listing the results."
										},
										{
											"key": "order",
											"value": "asc",
											"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\nOrdering in this case is based on the time of the first mint transaction.\n"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"asset\": \"<string>\",\n    \"quantity\": \"<string>\"\n  },\n  {\n    \"asset\": \"<string>\",\n    \"quantity\": \"<string>\"\n  }\n]"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assets?count=100&page=1&order=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assets"
									],
									"query": [
										{
											"key": "count",
											"value": "100",
											"description": "The number of results displayed on one page."
										},
										{
											"key": "page",
											"value": "1",
											"description": "The page number for listing the results."
										},
										{
											"key": "order",
											"value": "asc",
											"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\nOrdering in this case is based on the time of the first mint transaction.\n"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "Authentication secret is missing or invalid",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assets?count=100&page=1&order=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assets"
									],
									"query": [
										{
											"key": "count",
											"value": "100",
											"description": "The number of results displayed on one page."
										},
										{
											"key": "page",
											"value": "1",
											"description": "The page number for listing the results."
										},
										{
											"key": "order",
											"value": "asc",
											"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\nOrdering in this case is based on the time of the first mint transaction.\n"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "Component not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assets?count=100&page=1&order=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assets"
									],
									"query": [
										{
											"key": "count",
											"value": "100",
											"description": "The number of results displayed on one page."
										},
										{
											"key": "page",
											"value": "1",
											"description": "The page number for listing the results."
										},
										{
											"key": "order",
											"value": "asc",
											"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\nOrdering in this case is based on the time of the first mint transaction.\n"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assets?count=100&page=1&order=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assets"
									],
									"query": [
										{
											"key": "count",
											"value": "100",
											"description": "The number of results displayed on one page."
										},
										{
											"key": "page",
											"value": "1",
											"description": "The page number for listing the results."
										},
										{
											"key": "order",
											"value": "asc",
											"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\nOrdering in this case is based on the time of the first mint transaction.\n"
										}
									]
								}
							},
							"status": "I'm a teapot (RFC 2324)",
							"code": 418,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "Usage limit reached",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assets?count=100&page=1&order=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assets"
									],
									"query": [
										{
											"key": "count",
											"value": "100",
											"description": "The number of results displayed on one page."
										},
										{
											"key": "page",
											"value": "1",
											"description": "The page number for listing the results."
										},
										{
											"key": "order",
											"value": "asc",
											"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\nOrdering in this case is based on the time of the first mint transaction.\n"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assets?count=100&page=1&order=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assets"
									],
									"query": [
										{
											"key": "count",
											"value": "100",
											"description": "The number of results displayed on one page."
										},
										{
											"key": "page",
											"value": "1",
											"description": "The page number for listing the results."
										},
										{
											"key": "order",
											"value": "asc",
											"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\nOrdering in this case is based on the time of the first mint transaction.\n"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "scripts",
			"item": [
				{
					"name": "{script_hash}",
					"item": [
						{
							"name": "json",
							"item": [
								{
									"name": "Script JSON",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scripts/:script_hash/json",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scripts",
												":script_hash",
												"json"
											],
											"variable": [
												{
													"key": "script_hash",
													"value": "<string>",
													"description": "(Required) Hash of the script"
												}
											]
										},
										"description": "JSON representation of a `timelock` script"
									},
									"response": [
										{
											"name": "Return the JSON representation of a `timelock` script",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scripts/:script_hash/json",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scripts",
														":script_hash",
														"json"
													],
													"variable": [
														{
															"key": "script_hash"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"json\": \"<string>\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scripts/:script_hash/json",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scripts",
														":script_hash",
														"json"
													],
													"variable": [
														{
															"key": "script_hash"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scripts/:script_hash/json",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scripts",
														":script_hash",
														"json"
													],
													"variable": [
														{
															"key": "script_hash"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scripts/:script_hash/json",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scripts",
														":script_hash",
														"json"
													],
													"variable": [
														{
															"key": "script_hash"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scripts/:script_hash/json",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scripts",
														":script_hash",
														"json"
													],
													"variable": [
														{
															"key": "script_hash"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scripts/:script_hash/json",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scripts",
														":script_hash",
														"json"
													],
													"variable": [
														{
															"key": "script_hash"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scripts/:script_hash/json",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scripts",
														":script_hash",
														"json"
													],
													"variable": [
														{
															"key": "script_hash"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "cbor",
							"item": [
								{
									"name": "Script CBOR",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scripts/:script_hash/cbor",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scripts",
												":script_hash",
												"cbor"
											],
											"variable": [
												{
													"key": "script_hash",
													"value": "<string>",
													"description": "(Required) Hash of the script"
												}
											]
										},
										"description": "CBOR representation of a `plutus` script"
									},
									"response": [
										{
											"name": "Return the CBOR representation of a `plutus` script",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scripts/:script_hash/cbor",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scripts",
														":script_hash",
														"cbor"
													],
													"variable": [
														{
															"key": "script_hash"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"cbor\": \"<string>\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scripts/:script_hash/cbor",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scripts",
														":script_hash",
														"cbor"
													],
													"variable": [
														{
															"key": "script_hash"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scripts/:script_hash/cbor",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scripts",
														":script_hash",
														"cbor"
													],
													"variable": [
														{
															"key": "script_hash"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scripts/:script_hash/cbor",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scripts",
														":script_hash",
														"cbor"
													],
													"variable": [
														{
															"key": "script_hash"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scripts/:script_hash/cbor",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scripts",
														":script_hash",
														"cbor"
													],
													"variable": [
														{
															"key": "script_hash"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scripts/:script_hash/cbor",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scripts",
														":script_hash",
														"cbor"
													],
													"variable": [
														{
															"key": "script_hash"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scripts/:script_hash/cbor",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scripts",
														":script_hash",
														"cbor"
													],
													"variable": [
														{
															"key": "script_hash"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "redeemers",
							"item": [
								{
									"name": "Redeemers of a specific script",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scripts/:script_hash/redeemers?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scripts",
												":script_hash",
												"redeemers"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											],
											"variable": [
												{
													"key": "script_hash",
													"value": "<string>",
													"description": "(Required) Hash of the script"
												}
											]
										},
										"description": "List of redeemers of a specific script"
									},
									"response": [
										{
											"name": "Return the information about redeemers of a specific script",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scripts/:script_hash/redeemers?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scripts",
														":script_hash",
														"redeemers"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "script_hash"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"tx_hash\": \"<string>\",\n    \"tx_index\": \"<integer>\",\n    \"purpose\": \"mint\",\n    \"redeemer_data_hash\": \"<string>\",\n    \"datum_hash\": \"<string>\",\n    \"unit_mem\": \"<string>\",\n    \"unit_steps\": \"<string>\",\n    \"fee\": \"<string>\"\n  },\n  {\n    \"tx_hash\": \"<string>\",\n    \"tx_index\": \"<integer>\",\n    \"purpose\": \"cert\",\n    \"redeemer_data_hash\": \"<string>\",\n    \"datum_hash\": \"<string>\",\n    \"unit_mem\": \"<string>\",\n    \"unit_steps\": \"<string>\",\n    \"fee\": \"<string>\"\n  }\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scripts/:script_hash/redeemers?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scripts",
														":script_hash",
														"redeemers"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "script_hash"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scripts/:script_hash/redeemers?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scripts",
														":script_hash",
														"redeemers"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "script_hash"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scripts/:script_hash/redeemers?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scripts",
														":script_hash",
														"redeemers"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "script_hash"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scripts/:script_hash/redeemers?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scripts",
														":script_hash",
														"redeemers"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "script_hash"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scripts/:script_hash/redeemers?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scripts",
														":script_hash",
														"redeemers"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "script_hash"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scripts/:script_hash/redeemers?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scripts",
														":script_hash",
														"redeemers"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "script_hash"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Specific script",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/scripts/:script_hash",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scripts",
										":script_hash"
									],
									"variable": [
										{
											"key": "script_hash",
											"value": "<string>",
											"description": "(Required) Hash of the script"
										}
									]
								},
								"description": "Information about a specific script"
							},
							"response": [
								{
									"name": "Return the information about a specific script",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scripts/:script_hash",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scripts",
												":script_hash"
											],
											"variable": [
												{
													"key": "script_hash"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"script_hash\": \"<string>\",\n  \"type\": \"plutusV1\",\n  \"serialised_size\": \"<integer>\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scripts/:script_hash",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scripts",
												":script_hash"
											],
											"variable": [
												{
													"key": "script_hash"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Authentication secret is missing or invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scripts/:script_hash",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scripts",
												":script_hash"
											],
											"variable": [
												{
													"key": "script_hash"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Component not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scripts/:script_hash",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scripts",
												":script_hash"
											],
											"variable": [
												{
													"key": "script_hash"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scripts/:script_hash",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scripts",
												":script_hash"
											],
											"variable": [
												{
													"key": "script_hash"
												}
											]
										}
									},
									"status": "I'm a teapot (RFC 2324)",
									"code": 418,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Usage limit reached",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scripts/:script_hash",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scripts",
												":script_hash"
											],
											"variable": [
												{
													"key": "script_hash"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scripts/:script_hash",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scripts",
												":script_hash"
											],
											"variable": [
												{
													"key": "script_hash"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "datum",
					"item": [
						{
							"name": "{datum_hash}",
							"item": [
								{
									"name": "cbor",
									"item": [
										{
											"name": "Datum CBOR value",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scripts/datum/:datum_hash/cbor",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scripts",
														"datum",
														":datum_hash",
														"cbor"
													],
													"variable": [
														{
															"key": "datum_hash",
															"value": "<string>",
															"description": "(Required) Hash of the datum"
														}
													]
												},
												"description": "Query CBOR serialised datum by its hash"
											},
											"response": [
												{
													"name": "Return the CBOR serialised datum value",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/scripts/datum/:datum_hash/cbor",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"scripts",
																"datum",
																":datum_hash",
																"cbor"
															],
															"variable": [
																{
																	"key": "datum_hash"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"cbor\": \"<string>\"\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/scripts/datum/:datum_hash/cbor",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"scripts",
																"datum",
																":datum_hash",
																"cbor"
															],
															"variable": [
																{
																	"key": "datum_hash"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Authentication secret is missing or invalid",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/scripts/datum/:datum_hash/cbor",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"scripts",
																"datum",
																":datum_hash",
																"cbor"
															],
															"variable": [
																{
																	"key": "datum_hash"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Component not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/scripts/datum/:datum_hash/cbor",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"scripts",
																"datum",
																":datum_hash",
																"cbor"
															],
															"variable": [
																{
																	"key": "datum_hash"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/scripts/datum/:datum_hash/cbor",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"scripts",
																"datum",
																":datum_hash",
																"cbor"
															],
															"variable": [
																{
																	"key": "datum_hash"
																}
															]
														}
													},
													"status": "I'm a teapot (RFC 2324)",
													"code": 418,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Usage limit reached",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/scripts/datum/:datum_hash/cbor",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"scripts",
																"datum",
																":datum_hash",
																"cbor"
															],
															"variable": [
																{
																	"key": "datum_hash"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/scripts/datum/:datum_hash/cbor",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"scripts",
																"datum",
																":datum_hash",
																"cbor"
															],
															"variable": [
																{
																	"key": "datum_hash"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Datum value",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scripts/datum/:datum_hash",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scripts",
												"datum",
												":datum_hash"
											],
											"variable": [
												{
													"key": "datum_hash",
													"value": "<string>",
													"description": "(Required) Hash of the datum"
												}
											]
										},
										"description": "Query JSON value of a datum by its hash"
									},
									"response": [
										{
											"name": "Return the datum value",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scripts/datum/:datum_hash",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scripts",
														"datum",
														":datum_hash"
													],
													"variable": [
														{
															"key": "datum_hash"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"json_value\": {\n    \"Ut_a\": \"aute adipisicing\"\n  }\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scripts/datum/:datum_hash",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scripts",
														"datum",
														":datum_hash"
													],
													"variable": [
														{
															"key": "datum_hash"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scripts/datum/:datum_hash",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scripts",
														"datum",
														":datum_hash"
													],
													"variable": [
														{
															"key": "datum_hash"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scripts/datum/:datum_hash",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scripts",
														"datum",
														":datum_hash"
													],
													"variable": [
														{
															"key": "datum_hash"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scripts/datum/:datum_hash",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scripts",
														"datum",
														":datum_hash"
													],
													"variable": [
														{
															"key": "datum_hash"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scripts/datum/:datum_hash",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scripts",
														"datum",
														":datum_hash"
													],
													"variable": [
														{
															"key": "datum_hash"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scripts/datum/:datum_hash",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scripts",
														"datum",
														":datum_hash"
													],
													"variable": [
														{
															"key": "datum_hash"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Scripts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/scripts?count=100&page=1&order=asc",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"scripts"
							],
							"query": [
								{
									"key": "count",
									"value": "100",
									"description": "The number of results displayed on one page."
								},
								{
									"key": "page",
									"value": "1",
									"description": "The page number for listing the results."
								},
								{
									"key": "order",
									"value": "asc",
									"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
								}
							]
						},
						"description": "List of scripts."
					},
					"response": [
						{
							"name": "Return list of scripts",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/scripts?count=100&page=1&order=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scripts"
									],
									"query": [
										{
											"key": "count",
											"value": "100",
											"description": "The number of results displayed on one page."
										},
										{
											"key": "page",
											"value": "1",
											"description": "The page number for listing the results."
										},
										{
											"key": "order",
											"value": "asc",
											"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"script_hash\": \"<string>\"\n  },\n  {\n    \"script_hash\": \"<string>\"\n  }\n]"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/scripts?count=100&page=1&order=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scripts"
									],
									"query": [
										{
											"key": "count",
											"value": "100",
											"description": "The number of results displayed on one page."
										},
										{
											"key": "page",
											"value": "1",
											"description": "The page number for listing the results."
										},
										{
											"key": "order",
											"value": "asc",
											"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "Authentication secret is missing or invalid",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/scripts?count=100&page=1&order=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scripts"
									],
									"query": [
										{
											"key": "count",
											"value": "100",
											"description": "The number of results displayed on one page."
										},
										{
											"key": "page",
											"value": "1",
											"description": "The page number for listing the results."
										},
										{
											"key": "order",
											"value": "asc",
											"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "Component not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/scripts?count=100&page=1&order=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scripts"
									],
									"query": [
										{
											"key": "count",
											"value": "100",
											"description": "The number of results displayed on one page."
										},
										{
											"key": "page",
											"value": "1",
											"description": "The page number for listing the results."
										},
										{
											"key": "order",
											"value": "asc",
											"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/scripts?count=100&page=1&order=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scripts"
									],
									"query": [
										{
											"key": "count",
											"value": "100",
											"description": "The number of results displayed on one page."
										},
										{
											"key": "page",
											"value": "1",
											"description": "The page number for listing the results."
										},
										{
											"key": "order",
											"value": "asc",
											"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
										}
									]
								}
							},
							"status": "I'm a teapot (RFC 2324)",
							"code": 418,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "Usage limit reached",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/scripts?count=100&page=1&order=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scripts"
									],
									"query": [
										{
											"key": "count",
											"value": "100",
											"description": "The number of results displayed on one page."
										},
										{
											"key": "page",
											"value": "1",
											"description": "The page number for listing the results."
										},
										{
											"key": "order",
											"value": "asc",
											"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/scripts?count=100&page=1&order=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scripts"
									],
									"query": [
										{
											"key": "count",
											"value": "100",
											"description": "The number of results displayed on one page."
										},
										{
											"key": "page",
											"value": "1",
											"description": "The page number for listing the results."
										},
										{
											"key": "order",
											"value": "asc",
											"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "utils",
			"item": [
				{
					"name": "addresses",
					"item": [
						{
							"name": "xpub",
							"item": [
								{
									"name": "{xpub}",
									"item": [
										{
											"name": "{role}",
											"item": [
												{
													"name": "{index}",
													"item": [
														{
															"name": "Derive an address",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/utils/addresses/xpub/:xpub/:role/:index",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"utils",
																		"addresses",
																		"xpub",
																		":xpub",
																		":role",
																		":index"
																	],
																	"variable": [
																		{
																			"key": "xpub",
																			"value": "<string>",
																			"description": "(Required) Hex xpub"
																		},
																		{
																			"key": "role",
																			"value": "<integer>",
																			"description": "(Required) Account role"
																		},
																		{
																			"key": "index",
																			"value": "<integer>",
																			"description": "(Required) Address index"
																		}
																	]
																},
																"description": "Derive Shelley address from an xpub"
															},
															"response": [
																{
																	"name": "Return derivated Shelley address",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "project_id",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/utils/addresses/xpub/:xpub/:role/:index",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"utils",
																				"addresses",
																				"xpub",
																				":xpub",
																				":role",
																				":index"
																			],
																			"variable": [
																				{
																					"key": "xpub"
																				},
																				{
																					"key": "role"
																				},
																				{
																					"key": "index"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"xpub\": \"<string>\",\n  \"role\": \"<integer>\",\n  \"index\": \"<integer>\",\n  \"address\": \"<string>\"\n}"
																},
																{
																	"name": "Bad request",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "project_id",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/utils/addresses/xpub/:xpub/:role/:index",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"utils",
																				"addresses",
																				"xpub",
																				":xpub",
																				":role",
																				":index"
																			],
																			"variable": [
																				{
																					"key": "xpub"
																				},
																				{
																					"key": "role"
																				},
																				{
																					"key": "index"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
																},
																{
																	"name": "Authentication secret is missing or invalid",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "project_id",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/utils/addresses/xpub/:xpub/:role/:index",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"utils",
																				"addresses",
																				"xpub",
																				":xpub",
																				":role",
																				":index"
																			],
																			"variable": [
																				{
																					"key": "xpub"
																				},
																				{
																					"key": "role"
																				},
																				{
																					"key": "index"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
																},
																{
																	"name": "Component not found",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "project_id",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/utils/addresses/xpub/:xpub/:role/:index",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"utils",
																				"addresses",
																				"xpub",
																				":xpub",
																				":role",
																				":index"
																			],
																			"variable": [
																				{
																					"key": "xpub"
																				},
																				{
																					"key": "role"
																				},
																				{
																					"key": "index"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
																},
																{
																	"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "project_id",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/utils/addresses/xpub/:xpub/:role/:index",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"utils",
																				"addresses",
																				"xpub",
																				":xpub",
																				":role",
																				":index"
																			],
																			"variable": [
																				{
																					"key": "xpub"
																				},
																				{
																					"key": "role"
																				},
																				{
																					"key": "index"
																				}
																			]
																		}
																	},
																	"status": "I'm a teapot (RFC 2324)",
																	"code": 418,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
																},
																{
																	"name": "Usage limit reached",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "project_id",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/utils/addresses/xpub/:xpub/:role/:index",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"utils",
																				"addresses",
																				"xpub",
																				":xpub",
																				":role",
																				":index"
																			],
																			"variable": [
																				{
																					"key": "xpub"
																				},
																				{
																					"key": "role"
																				},
																				{
																					"key": "index"
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
																},
																{
																	"name": "Internal Server Error",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "project_id",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/utils/addresses/xpub/:xpub/:role/:index",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"utils",
																				"addresses",
																				"xpub",
																				":xpub",
																				":role",
																				":index"
																			],
																			"variable": [
																				{
																					"key": "xpub"
																				},
																				{
																					"key": "role"
																				},
																				{
																					"key": "index"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "txs",
					"item": [
						{
							"name": "evaluate",
							"item": [
								{
									"name": "utxos",
									"item": [
										{
											"name": "Submit a transaction for execution units evaluation (additional UTXO set)",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"cbor\": \"<string>\",\n  \"additionalUtxoSet\": [\n    [\n      {\n        \"txId\": \"<string>\",\n        \"index\": \"<number>\"\n      },\n      {\n        \"txId\": \"<string>\",\n        \"index\": \"<number>\"\n      }\n    ],\n    [\n      {\n        \"txId\": \"<string>\",\n        \"index\": \"<number>\"\n      },\n      {\n        \"txId\": \"<string>\",\n        \"index\": \"<number>\"\n      }\n    ]\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/utils/txs/evaluate/utxos",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"utils",
														"txs",
														"evaluate",
														"utxos"
													]
												},
												"description": "Submit a JSON payload with transaction CBOR and additional UTXO set to evaluate how much execution units it requires.\n\n<p>\n  <span class=\"hosted\">Hosted</span> Endpoint only available for hosted variant.\n</p>\n"
											},
											"response": [
												{
													"name": "<p>\n  <div class=\"custom-paragraph\">\n    Returns result of EvaluateTx function from Ogmios see <a class=\"custom-link\" href=\"https://ogmios.dev/mini-protocols/local-tx-submission/#evaluatetx\">EvaluateTx</a>\n    and<a href=\"https://ogmios.dev/api/\"> API ref",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"cbor\": \"<string>\",\n  \"additionalUtxoSet\": [\n    [\n      {\n        \"txId\": \"<string>\",\n        \"index\": \"<number>\"\n      },\n      {\n        \"txId\": \"<string>\",\n        \"index\": \"<number>\"\n      }\n    ],\n    [\n      {\n        \"txId\": \"<string>\",\n        \"index\": \"<number>\"\n      },\n      {\n        \"txId\": \"<string>\",\n        \"index\": \"<number>\"\n      }\n    ]\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/utils/txs/evaluate/utxos",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"utils",
																"txs",
																"evaluate",
																"utxos"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"in0_5\": -61978654.91518657,\n  \"laborumf1\": -54064523,\n  \"nostrudc\": -73839710.53231217\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"cbor\": \"<string>\",\n  \"additionalUtxoSet\": [\n    [\n      {\n        \"txId\": \"<string>\",\n        \"index\": \"<number>\"\n      },\n      {\n        \"txId\": \"<string>\",\n        \"index\": \"<number>\"\n      }\n    ],\n    [\n      {\n        \"txId\": \"<string>\",\n        \"index\": \"<number>\"\n      },\n      {\n        \"txId\": \"<string>\",\n        \"index\": \"<number>\"\n      }\n    ]\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/utils/txs/evaluate/utxos",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"utils",
																"txs",
																"evaluate",
																"utxos"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Authentication secret is missing or invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"cbor\": \"<string>\",\n  \"additionalUtxoSet\": [\n    [\n      {\n        \"txId\": \"<string>\",\n        \"index\": \"<number>\"\n      },\n      {\n        \"txId\": \"<string>\",\n        \"index\": \"<number>\"\n      }\n    ],\n    [\n      {\n        \"txId\": \"<string>\",\n        \"index\": \"<number>\"\n      },\n      {\n        \"txId\": \"<string>\",\n        \"index\": \"<number>\"\n      }\n    ]\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/utils/txs/evaluate/utxos",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"utils",
																"txs",
																"evaluate",
																"utxos"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Component not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"cbor\": \"<string>\",\n  \"additionalUtxoSet\": [\n    [\n      {\n        \"txId\": \"<string>\",\n        \"index\": \"<number>\"\n      },\n      {\n        \"txId\": \"<string>\",\n        \"index\": \"<number>\"\n      }\n    ],\n    [\n      {\n        \"txId\": \"<string>\",\n        \"index\": \"<number>\"\n      },\n      {\n        \"txId\": \"<string>\",\n        \"index\": \"<number>\"\n      }\n    ]\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/utils/txs/evaluate/utxos",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"utils",
																"txs",
																"evaluate",
																"utxos"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"cbor\": \"<string>\",\n  \"additionalUtxoSet\": [\n    [\n      {\n        \"txId\": \"<string>\",\n        \"index\": \"<number>\"\n      },\n      {\n        \"txId\": \"<string>\",\n        \"index\": \"<number>\"\n      }\n    ],\n    [\n      {\n        \"txId\": \"<string>\",\n        \"index\": \"<number>\"\n      },\n      {\n        \"txId\": \"<string>\",\n        \"index\": \"<number>\"\n      }\n    ]\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/utils/txs/evaluate/utxos",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"utils",
																"txs",
																"evaluate",
																"utxos"
															]
														}
													},
													"status": "I'm a teapot (RFC 2324)",
													"code": 418,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Mempool is already full, not accepting new txs straight away",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"cbor\": \"<string>\",\n  \"additionalUtxoSet\": [\n    [\n      {\n        \"txId\": \"<string>\",\n        \"index\": \"<number>\"\n      },\n      {\n        \"txId\": \"<string>\",\n        \"index\": \"<number>\"\n      }\n    ],\n    [\n      {\n        \"txId\": \"<string>\",\n        \"index\": \"<number>\"\n      },\n      {\n        \"txId\": \"<string>\",\n        \"index\": \"<number>\"\n      }\n    ]\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/utils/txs/evaluate/utxos",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"utils",
																"txs",
																"evaluate",
																"utxos"
															]
														}
													},
													"status": "Unordered Collection (RFC 3648)",
													"code": 425,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Usage limit reached",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"cbor\": \"<string>\",\n  \"additionalUtxoSet\": [\n    [\n      {\n        \"txId\": \"<string>\",\n        \"index\": \"<number>\"\n      },\n      {\n        \"txId\": \"<string>\",\n        \"index\": \"<number>\"\n      }\n    ],\n    [\n      {\n        \"txId\": \"<string>\",\n        \"index\": \"<number>\"\n      },\n      {\n        \"txId\": \"<string>\",\n        \"index\": \"<number>\"\n      }\n    ]\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/utils/txs/evaluate/utxos",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"utils",
																"txs",
																"evaluate",
																"utxos"
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"cbor\": \"<string>\",\n  \"additionalUtxoSet\": [\n    [\n      {\n        \"txId\": \"<string>\",\n        \"index\": \"<number>\"\n      },\n      {\n        \"txId\": \"<string>\",\n        \"index\": \"<number>\"\n      }\n    ],\n    [\n      {\n        \"txId\": \"<string>\",\n        \"index\": \"<number>\"\n      },\n      {\n        \"txId\": \"<string>\",\n        \"index\": \"<number>\"\n      }\n    ]\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/utils/txs/evaluate/utxos",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"utils",
																"txs",
																"evaluate",
																"utxos"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Submit a transaction for execution units evaluation",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/cbor"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<string>"
										},
										"url": {
											"raw": "{{baseUrl}}/utils/txs/evaluate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"utils",
												"txs",
												"evaluate"
											]
										},
										"description": "Submit an already serialized transaction to evaluate how much execution units it requires.\n\n<p>\n  <span class=\"hosted\">Hosted</span> Endpoint only available for hosted variant.\n</p>\n"
									},
									"response": [
										{
											"name": "<p>\n  <div class=\"custom-paragraph\">\n    Returns result of EvaluateTx function from Ogmios see <a class=\"custom-link\" href=\"https://ogmios.dev/mini-protocols/local-tx-submission/#evaluatetx\">EvaluateTx</a>\n    and<a href=\"https://ogmios.dev/api/\"> API ref",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/cbor"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>"
												},
												"url": {
													"raw": "{{baseUrl}}/utils/txs/evaluate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"utils",
														"txs",
														"evaluate"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"in0_5\": -61978654.91518657,\n  \"laborumf1\": -54064523,\n  \"nostrudc\": -73839710.53231217\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/cbor"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>"
												},
												"url": {
													"raw": "{{baseUrl}}/utils/txs/evaluate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"utils",
														"txs",
														"evaluate"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/cbor"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>"
												},
												"url": {
													"raw": "{{baseUrl}}/utils/txs/evaluate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"utils",
														"txs",
														"evaluate"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/cbor"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>"
												},
												"url": {
													"raw": "{{baseUrl}}/utils/txs/evaluate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"utils",
														"txs",
														"evaluate"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/cbor"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>"
												},
												"url": {
													"raw": "{{baseUrl}}/utils/txs/evaluate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"utils",
														"txs",
														"evaluate"
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Mempool is already full, not accepting new txs straight away",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/cbor"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>"
												},
												"url": {
													"raw": "{{baseUrl}}/utils/txs/evaluate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"utils",
														"txs",
														"evaluate"
													]
												}
											},
											"status": "Unordered Collection (RFC 3648)",
											"code": 425,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/cbor"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>"
												},
												"url": {
													"raw": "{{baseUrl}}/utils/txs/evaluate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"utils",
														"txs",
														"evaluate"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/cbor"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>"
												},
												"url": {
													"raw": "{{baseUrl}}/utils/txs/evaluate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"utils",
														"txs",
														"evaluate"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "ipfs",
			"item": [
				{
					"name": "add",
					"item": [
						{
							"name": "Add a file to IPFS",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "<string>",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/ipfs/add",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ipfs",
										"add"
									]
								},
								"description": "You need to `/ipfs/pin/add` an object to avoid it being garbage collected. This usage\nis being counted in your user account quota.\n\n<p>\n  <span class=\"hosted\">Hosted</span> Endpoint only available for hosted variant.\n</p>\n"
							},
							"response": [
								{
									"name": "Returns information about added IPFS object",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<string>",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/ipfs/add",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ipfs",
												"add"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"<string>\",\n  \"ipfs_hash\": \"<string>\",\n  \"size\": \"<string>\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<string>",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/ipfs/add",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ipfs",
												"add"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Authentication secret is missing or invalid",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<string>",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/ipfs/add",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ipfs",
												"add"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Component not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<string>",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/ipfs/add",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ipfs",
												"add"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<string>",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/ipfs/add",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ipfs",
												"add"
											]
										}
									},
									"status": "I'm a teapot (RFC 2324)",
									"code": 418,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Usage limit reached",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<string>",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/ipfs/add",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ipfs",
												"add"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<string>",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/ipfs/add",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ipfs",
												"add"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "gateway",
					"item": [
						{
							"name": "{IPFS_path}",
							"item": [
								{
									"name": "Relay to an IPFS gateway",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/octet-stream"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ipfs/gateway/:IPFS_path",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ipfs",
												"gateway",
												":IPFS_path"
											],
											"variable": [
												{
													"key": "IPFS_path",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Retrieve an object from the IPFS gateway (useful if you do not want to rely on a public gateway, such as `ipfs.blockfrost.dev`).\n\n<p>\n  <span class=\"hosted\">Hosted</span> Endpoint only available for hosted variant.\n</p>\n"
									},
									"response": [
										{
											"name": "Returns the object content",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/octet-stream"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ipfs/gateway/:IPFS_path",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ipfs",
														"gateway",
														":IPFS_path"
													],
													"variable": [
														{
															"key": "IPFS_path"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/octet-stream"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ipfs/gateway/:IPFS_path",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ipfs",
														"gateway",
														":IPFS_path"
													],
													"variable": [
														{
															"key": "IPFS_path"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ipfs/gateway/:IPFS_path",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ipfs",
														"gateway",
														":IPFS_path"
													],
													"variable": [
														{
															"key": "IPFS_path"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ipfs/gateway/:IPFS_path",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ipfs",
														"gateway",
														":IPFS_path"
													],
													"variable": [
														{
															"key": "IPFS_path"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ipfs/gateway/:IPFS_path",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ipfs",
														"gateway",
														":IPFS_path"
													],
													"variable": [
														{
															"key": "IPFS_path"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ipfs/gateway/:IPFS_path",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ipfs",
														"gateway",
														":IPFS_path"
													],
													"variable": [
														{
															"key": "IPFS_path"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ipfs/gateway/:IPFS_path",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ipfs",
														"gateway",
														":IPFS_path"
													],
													"variable": [
														{
															"key": "IPFS_path"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "pin",
					"item": [
						{
							"name": "add",
							"item": [
								{
									"name": "{IPFS_path}",
									"item": [
										{
											"name": "Pin an object",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ipfs/pin/add/:IPFS_path",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ipfs",
														"pin",
														"add",
														":IPFS_path"
													],
													"variable": [
														{
															"key": "IPFS_path",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "Pinning is necessary to avoid regular garbage collection (deletion) of IPFS objects. Non-pinned objects are regularly being removed without prior notice. Pinned objects are counted in your user storage quota."
											},
											"response": [
												{
													"name": "Returns pinned object",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ipfs/pin/add/:IPFS_path",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ipfs",
																"pin",
																"add",
																":IPFS_path"
															],
															"variable": [
																{
																	"key": "IPFS_path"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"ipfs_hash\": \"<string>\",\n  \"state\": \"queued|pinned|unpinned|failed|gc\"\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ipfs/pin/add/:IPFS_path",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ipfs",
																"pin",
																"add",
																":IPFS_path"
															],
															"variable": [
																{
																	"key": "IPFS_path"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Authentication secret is missing or invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ipfs/pin/add/:IPFS_path",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ipfs",
																"pin",
																"add",
																":IPFS_path"
															],
															"variable": [
																{
																	"key": "IPFS_path"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Component not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ipfs/pin/add/:IPFS_path",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ipfs",
																"pin",
																"add",
																":IPFS_path"
															],
															"variable": [
																{
																	"key": "IPFS_path"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ipfs/pin/add/:IPFS_path",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ipfs",
																"pin",
																"add",
																":IPFS_path"
															],
															"variable": [
																{
																	"key": "IPFS_path"
																}
															]
														}
													},
													"status": "I'm a teapot (RFC 2324)",
													"code": 418,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Pin queue is currently full, not accepting new txs straight away",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ipfs/pin/add/:IPFS_path",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ipfs",
																"pin",
																"add",
																":IPFS_path"
															],
															"variable": [
																{
																	"key": "IPFS_path"
																}
															]
														}
													},
													"status": "Unordered Collection (RFC 3648)",
													"code": 425,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Usage limit reached",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ipfs/pin/add/:IPFS_path",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ipfs",
																"pin",
																"add",
																":IPFS_path"
															],
															"variable": [
																{
																	"key": "IPFS_path"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ipfs/pin/add/:IPFS_path",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ipfs",
																"pin",
																"add",
																":IPFS_path"
															],
															"variable": [
																{
																	"key": "IPFS_path"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "list",
							"item": [
								{
									"name": "{IPFS_path}",
									"item": [
										{
											"name": "Get details about pinned object",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ipfs/pin/list/:IPFS_path",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ipfs",
														"pin",
														"list",
														":IPFS_path"
													],
													"variable": [
														{
															"key": "IPFS_path",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "Get information about locally pinned IPFS object\n\n<p>\n  <span class=\"hosted\">Hosted</span> Endpoint only available for hosted variant.\n</p>\n"
											},
											"response": [
												{
													"name": "Returns the pins pinned",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ipfs/pin/list/:IPFS_path",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ipfs",
																"pin",
																"list",
																":IPFS_path"
															],
															"variable": [
																{
																	"key": "IPFS_path"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"time_created\": \"<integer>\",\n  \"time_pinned\": \"<integer>\",\n  \"ipfs_hash\": \"<string>\",\n  \"size\": \"<string>\",\n  \"state\": \"queued|pinned|unpinned|failed|gc\"\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ipfs/pin/list/:IPFS_path",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ipfs",
																"pin",
																"list",
																":IPFS_path"
															],
															"variable": [
																{
																	"key": "IPFS_path"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Authentication secret is missing or invalid",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ipfs/pin/list/:IPFS_path",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ipfs",
																"pin",
																"list",
																":IPFS_path"
															],
															"variable": [
																{
																	"key": "IPFS_path"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Component not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ipfs/pin/list/:IPFS_path",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ipfs",
																"pin",
																"list",
																":IPFS_path"
															],
															"variable": [
																{
																	"key": "IPFS_path"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ipfs/pin/list/:IPFS_path",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ipfs",
																"pin",
																"list",
																":IPFS_path"
															],
															"variable": [
																{
																	"key": "IPFS_path"
																}
															]
														}
													},
													"status": "I'm a teapot (RFC 2324)",
													"code": 418,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Usage limit reached",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ipfs/pin/list/:IPFS_path",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ipfs",
																"pin",
																"list",
																":IPFS_path"
															],
															"variable": [
																{
																	"key": "IPFS_path"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ipfs/pin/list/:IPFS_path",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ipfs",
																"pin",
																"list",
																":IPFS_path"
															],
															"variable": [
																{
																	"key": "IPFS_path"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "List pinned objects",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ipfs/pin/list?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ipfs",
												"pin",
												"list"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											]
										},
										"description": "List objects pinned to local storage\n\n<p>\n  <span class=\"hosted\">Hosted</span> Endpoint only available for hosted variant.\n</p>\n"
									},
									"response": [
										{
											"name": "Returns pinned objects",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ipfs/pin/list?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ipfs",
														"pin",
														"list"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"time_created\": \"<integer>\",\n    \"time_pinned\": \"<integer>\",\n    \"ipfs_hash\": \"<string>\",\n    \"size\": \"<string>\",\n    \"state\": \"queued|pinned|unpinned|failed|gc\"\n  },\n  {\n    \"time_created\": \"<integer>\",\n    \"time_pinned\": \"<integer>\",\n    \"ipfs_hash\": \"<string>\",\n    \"size\": \"<string>\",\n    \"state\": \"queued|pinned|unpinned|failed|gc\"\n  }\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ipfs/pin/list?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ipfs",
														"pin",
														"list"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ipfs/pin/list?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ipfs",
														"pin",
														"list"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ipfs/pin/list?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ipfs",
														"pin",
														"list"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ipfs/pin/list?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ipfs",
														"pin",
														"list"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ipfs/pin/list?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ipfs",
														"pin",
														"list"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ipfs/pin/list?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ipfs",
														"pin",
														"list"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "remove",
							"item": [
								{
									"name": "{IPFS_path}",
									"item": [
										{
											"name": "Remove a IPFS pin",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ipfs/pin/remove/:IPFS_path",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ipfs",
														"pin",
														"remove",
														":IPFS_path"
													],
													"variable": [
														{
															"key": "IPFS_path",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "Remove pinned objects from local storage\n\n<p>\n  <span class=\"hosted\">Hosted</span> Endpoint only available for hosted variant.\n</p>\n"
											},
											"response": [
												{
													"name": "Returns the pins removed",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ipfs/pin/remove/:IPFS_path",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ipfs",
																"pin",
																"remove",
																":IPFS_path"
															],
															"variable": [
																{
																	"key": "IPFS_path"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"ipfs_hash\": \"<string>\",\n  \"state\": \"queued|pinned|unpinned|failed|gc\"\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ipfs/pin/remove/:IPFS_path",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ipfs",
																"pin",
																"remove",
																":IPFS_path"
															],
															"variable": [
																{
																	"key": "IPFS_path"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Authentication secret is missing or invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ipfs/pin/remove/:IPFS_path",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ipfs",
																"pin",
																"remove",
																":IPFS_path"
															],
															"variable": [
																{
																	"key": "IPFS_path"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Component not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ipfs/pin/remove/:IPFS_path",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ipfs",
																"pin",
																"remove",
																":IPFS_path"
															],
															"variable": [
																{
																	"key": "IPFS_path"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ipfs/pin/remove/:IPFS_path",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ipfs",
																"pin",
																"remove",
																":IPFS_path"
															],
															"variable": [
																{
																	"key": "IPFS_path"
																}
															]
														}
													},
													"status": "I'm a teapot (RFC 2324)",
													"code": 418,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Usage limit reached",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ipfs/pin/remove/:IPFS_path",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ipfs",
																"pin",
																"remove",
																":IPFS_path"
															],
															"variable": [
																{
																	"key": "IPFS_path"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ipfs/pin/remove/:IPFS_path",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ipfs",
																"pin",
																"remove",
																":IPFS_path"
															],
															"variable": [
																{
																	"key": "IPFS_path"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "metrics",
			"item": [
				{
					"name": "endpoints",
					"item": [
						{
							"name": "Blockfrost endpoint usage metrics",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics/endpoints",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										"endpoints"
									]
								},
								"description": "History of your Blockfrost usage metrics per endpoint in the past 30 days.\n"
							},
							"response": [
								{
									"name": "Return the last 30 days of metrics",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metrics/endpoints",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metrics",
												"endpoints"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"time\": \"<integer>\",\n    \"calls\": \"<integer>\",\n    \"endpoint\": \"<string>\"\n  },\n  {\n    \"time\": \"<integer>\",\n    \"calls\": \"<integer>\",\n    \"endpoint\": \"<string>\"\n  }\n]"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metrics/endpoints",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metrics",
												"endpoints"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Authentication secret is missing or invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metrics/endpoints",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metrics",
												"endpoints"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Component not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metrics/endpoints",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metrics",
												"endpoints"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metrics/endpoints",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metrics",
												"endpoints"
											]
										}
									},
									"status": "I'm a teapot (RFC 2324)",
									"code": 418,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Usage limit reached",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metrics/endpoints",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metrics",
												"endpoints"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metrics/endpoints",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metrics",
												"endpoints"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Blockfrost usage metrics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/metrics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"metrics"
							]
						},
						"description": "History of your Blockfrost usage metrics in the past 30 days."
					},
					"response": [
						{
							"name": "Return the last 30 days of metrics",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"time\": \"<integer>\",\n    \"calls\": \"<integer>\"\n  },\n  {\n    \"time\": \"<integer>\",\n    \"calls\": \"<integer>\"\n  }\n]"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "Authentication secret is missing or invalid",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "Component not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics"
									]
								}
							},
							"status": "I'm a teapot (RFC 2324)",
							"code": 418,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "Usage limit reached",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "network",
			"item": [
				{
					"name": "eras",
					"item": [
						{
							"name": "Query summary of blockchain eras",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/network/eras",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"network",
										"eras"
									]
								},
								"description": "Returns start and end of each era along with\nparameters that can vary between hard forks.\n"
							},
							"response": [
								{
									"name": "Returns era summaries content.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/network/eras",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"network",
												"eras"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"start\": {\n      \"time\": \"<number>\",\n      \"slot\": \"<integer>\",\n      \"epoch\": \"<integer>\"\n    },\n    \"end\": {\n      \"time\": \"<number>\",\n      \"slot\": \"<integer>\",\n      \"epoch\": \"<integer>\"\n    },\n    \"parameters\": {\n      \"epoch_length\": \"<integer>\",\n      \"slot_length\": \"<number>\",\n      \"safe_zone\": \"<integer>\"\n    }\n  },\n  {\n    \"start\": {\n      \"time\": \"<number>\",\n      \"slot\": \"<integer>\",\n      \"epoch\": \"<integer>\"\n    },\n    \"end\": {\n      \"time\": \"<number>\",\n      \"slot\": \"<integer>\",\n      \"epoch\": \"<integer>\"\n    },\n    \"parameters\": {\n      \"epoch_length\": \"<integer>\",\n      \"slot_length\": \"<number>\",\n      \"safe_zone\": \"<integer>\"\n    }\n  }\n]"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/network/eras",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"network",
												"eras"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Authentication secret is missing or invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/network/eras",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"network",
												"eras"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Component not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/network/eras",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"network",
												"eras"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/network/eras",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"network",
												"eras"
											]
										}
									},
									"status": "I'm a teapot (RFC 2324)",
									"code": 418,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Mempool is already full, not accepting new txs straight away",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/network/eras",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"network",
												"eras"
											]
										}
									},
									"status": "Unordered Collection (RFC 3648)",
									"code": 425,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Usage limit reached",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/network/eras",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"network",
												"eras"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/network/eras",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"network",
												"eras"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Network information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/network",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"network"
							]
						},
						"description": "Return detailed network information."
					},
					"response": [
						{
							"name": "Return detailed network information.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/network",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"network"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"supply\": {\n    \"max\": \"<string>\",\n    \"total\": \"<string>\",\n    \"circulating\": \"<string>\",\n    \"locked\": \"<string>\",\n    \"treasury\": \"<string>\",\n    \"reserves\": \"<string>\"\n  },\n  \"stake\": {\n    \"live\": \"<string>\",\n    \"active\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/network",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"network"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "Authentication secret is missing or invalid",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/network",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"network"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "Component not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/network",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"network"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/network",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"network"
									]
								}
							},
							"status": "I'm a teapot (RFC 2324)",
							"code": 418,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "Usage limit reached",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/network",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"network"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "project_id",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/network",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"network"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "nutlink",
			"item": [
				{
					"name": "{address}",
					"item": [
						{
							"name": "tickers",
							"item": [
								{
									"name": "{ticker}",
									"item": [
										{
											"name": "Specific ticker for an address",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/nutlink/:address/tickers/:ticker?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nutlink",
														":address",
														"tickers",
														":ticker"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "address",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "ticker",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "List of records of a specific ticker"
											},
											"response": [
												{
													"name": "Return the tickers provided by the metadata oracle",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/nutlink/:address/tickers/:ticker?count=100&page=1&order=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"nutlink",
																":address",
																"tickers",
																":ticker"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																},
																{
																	"key": "order",
																	"value": "asc",
																	"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																}
															],
															"variable": [
																{
																	"key": "address"
																},
																{
																	"key": "ticker"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"tx_hash\": \"<string>\",\n    \"tx_index\": \"<integer>\",\n    \"block_height\": \"<integer>\",\n    \"payload\": \"<string>\"\n  },\n  {\n    \"tx_hash\": \"<string>\",\n    \"tx_index\": \"<integer>\",\n    \"block_height\": \"<integer>\",\n    \"payload\": \"<string>\"\n  }\n]"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/nutlink/:address/tickers/:ticker?count=100&page=1&order=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"nutlink",
																":address",
																"tickers",
																":ticker"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																},
																{
																	"key": "order",
																	"value": "asc",
																	"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																}
															],
															"variable": [
																{
																	"key": "address"
																},
																{
																	"key": "ticker"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Authentication secret is missing or invalid",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/nutlink/:address/tickers/:ticker?count=100&page=1&order=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"nutlink",
																":address",
																"tickers",
																":ticker"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																},
																{
																	"key": "order",
																	"value": "asc",
																	"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																}
															],
															"variable": [
																{
																	"key": "address"
																},
																{
																	"key": "ticker"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Component not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/nutlink/:address/tickers/:ticker?count=100&page=1&order=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"nutlink",
																":address",
																"tickers",
																":ticker"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																},
																{
																	"key": "order",
																	"value": "asc",
																	"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																}
															],
															"variable": [
																{
																	"key": "address"
																},
																{
																	"key": "ticker"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/nutlink/:address/tickers/:ticker?count=100&page=1&order=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"nutlink",
																":address",
																"tickers",
																":ticker"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																},
																{
																	"key": "order",
																	"value": "asc",
																	"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																}
															],
															"variable": [
																{
																	"key": "address"
																},
																{
																	"key": "ticker"
																}
															]
														}
													},
													"status": "I'm a teapot (RFC 2324)",
													"code": 418,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Usage limit reached",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/nutlink/:address/tickers/:ticker?count=100&page=1&order=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"nutlink",
																":address",
																"tickers",
																":ticker"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																},
																{
																	"key": "order",
																	"value": "asc",
																	"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																}
															],
															"variable": [
																{
																	"key": "address"
																},
																{
																	"key": "ticker"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "project_id",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/nutlink/:address/tickers/:ticker?count=100&page=1&order=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"nutlink",
																":address",
																"tickers",
																":ticker"
															],
															"query": [
																{
																	"key": "count",
																	"value": "100",
																	"description": "The number of results displayed on one page."
																},
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page number for listing the results."
																},
																{
																	"key": "order",
																	"value": "asc",
																	"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
																}
															],
															"variable": [
																{
																	"key": "address"
																},
																{
																	"key": "ticker"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "List of tickers of an oracle",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/nutlink/:address/tickers?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nutlink",
												":address",
												"tickers"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											],
											"variable": [
												{
													"key": "address",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "List of records of a specific oracle"
									},
									"response": [
										{
											"name": "Return the tickers provided by the metadata oracle",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/nutlink/:address/tickers?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nutlink",
														":address",
														"tickers"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"name\": \"<string>\",\n    \"count\": \"<integer>\",\n    \"latest_block\": \"<integer>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"count\": \"<integer>\",\n    \"latest_block\": \"<integer>\"\n  }\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/nutlink/:address/tickers?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nutlink",
														":address",
														"tickers"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/nutlink/:address/tickers?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nutlink",
														":address",
														"tickers"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/nutlink/:address/tickers?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nutlink",
														":address",
														"tickers"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/nutlink/:address/tickers?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nutlink",
														":address",
														"tickers"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/nutlink/:address/tickers?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nutlink",
														":address",
														"tickers"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/nutlink/:address/tickers?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nutlink",
														":address",
														"tickers"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Specific nut.link address",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/nutlink/:address",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nutlink",
										":address"
									],
									"variable": [
										{
											"key": "address",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "List metadata about specific address"
							},
							"response": [
								{
									"name": "Return the metadata about metadata oracle",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/nutlink/:address",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nutlink",
												":address"
											],
											"variable": [
												{
													"key": "address"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"address\": \"<string>\",\n  \"metadata_url\": \"<string>\",\n  \"metadata_hash\": \"<string>\",\n  \"metadata\": {\n    \"pariaturd57\": -38646758.10583824,\n    \"Lorem_3_\": 47392260\n  }\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/nutlink/:address",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nutlink",
												":address"
											],
											"variable": [
												{
													"key": "address"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Authentication secret is missing or invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/nutlink/:address",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nutlink",
												":address"
											],
											"variable": [
												{
													"key": "address"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Component not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/nutlink/:address",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nutlink",
												":address"
											],
											"variable": [
												{
													"key": "address"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/nutlink/:address",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nutlink",
												":address"
											],
											"variable": [
												{
													"key": "address"
												}
											]
										}
									},
									"status": "I'm a teapot (RFC 2324)",
									"code": 418,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Usage limit reached",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/nutlink/:address",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nutlink",
												":address"
											],
											"variable": [
												{
													"key": "address"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "project_id",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/nutlink/:address",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nutlink",
												":address"
											],
											"variable": [
												{
													"key": "address"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "tickers",
					"item": [
						{
							"name": "{ticker}",
							"item": [
								{
									"name": "Specific ticker",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/nutlink/tickers/:ticker?count=100&page=1&order=asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nutlink",
												"tickers",
												":ticker"
											],
											"query": [
												{
													"key": "count",
													"value": "100",
													"description": "The number of results displayed on one page."
												},
												{
													"key": "page",
													"value": "1",
													"description": "The page number for listing the results."
												},
												{
													"key": "order",
													"value": "asc",
													"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
												}
											],
											"variable": [
												{
													"key": "ticker",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "List of records of a specific ticker"
									},
									"response": [
										{
											"name": "Return the tickers provided by the metadata oracle",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/nutlink/tickers/:ticker?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nutlink",
														"tickers",
														":ticker"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "ticker"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"address\": \"<string>\",\n    \"tx_hash\": \"<string>\",\n    \"block_height\": \"<integer>\",\n    \"tx_index\": \"<integer>\",\n    \"payload\": \"<string>\"\n  },\n  {\n    \"address\": \"<string>\",\n    \"tx_hash\": \"<string>\",\n    \"block_height\": \"<integer>\",\n    \"tx_index\": \"<integer>\",\n    \"payload\": \"<string>\"\n  }\n]"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/nutlink/tickers/:ticker?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nutlink",
														"tickers",
														":ticker"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "ticker"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication secret is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/nutlink/tickers/:ticker?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nutlink",
														"tickers",
														":ticker"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "ticker"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Component not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/nutlink/tickers/:ticker?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nutlink",
														"tickers",
														":ticker"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "ticker"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "IP has been auto-banned for extensive sending of requests after usage limit has been reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/nutlink/tickers/:ticker?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nutlink",
														"tickers",
														":ticker"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "ticker"
														}
													]
												}
											},
											"status": "I'm a teapot (RFC 2324)",
											"code": 418,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Usage limit reached",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/nutlink/tickers/:ticker?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nutlink",
														"tickers",
														":ticker"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "ticker"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "project_id",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/nutlink/tickers/:ticker?count=100&page=1&order=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nutlink",
														"tickers",
														":ticker"
													],
													"query": [
														{
															"key": "count",
															"value": "100",
															"description": "The number of results displayed on one page."
														},
														{
															"key": "page",
															"value": "1",
															"description": "The page number for listing the results."
														},
														{
															"key": "order",
															"value": "asc",
															"description": "The ordering of items from the point of view of the blockchain,\nnot the page listing itself. By default, we return oldest first, newest last.\n"
														}
													],
													"variable": [
														{
															"key": "ticker"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status_code\": \"<integer>\"\n}"
										}
									]
								}
							]
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "preprod15FQAa3zauTfVwRuRNC2a0Z7Ho4rwigF",
				"type": "string"
			},
			{
				"key": "key",
				"value": "project_id",
				"type": "string"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://cardano20.ifi.uzh.ch:3000"
		}
	]
}